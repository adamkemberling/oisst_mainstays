---
title: "Gulf of Maine Warming Update: 2024"
author: "Adam Kemberling"
url: "https://github.com/adamkemberling"
affiliation: "Gulf of Maine Research Institute"
affiliation_url: "https://www.gmri.org"
description: | 
  A Top-Five Hottest Year Despite Relief from Major Storm Systems 
date: "Updated on: `r Sys.Date()`"
format: 
  html:
    toc: true
    self-contained: true
execute: 
  echo: false
  warning: false
  message: false
  comment: ""
  fig.align: center
params: 
  report_year: 2024
  in_celsius: FALSE
  save_figures: 
    label: "Save Figures?" 
    value: FALSE
---



```{r}
#| label: code-setup
#| include: false

####  Packages  ####
{
  library(ggpubr)
  library(lubridate)
  library(raster)
  library(here)
  library(rnaturalearth)
  library(rgeoboundaries)
  library(scales)
  library(sf)
  library(stars)
  library(gmRi)
  library(heatwaveR)
  library(gt)
  library(gtExtras)
  library(patchwork)
  library(tidyverse)
  library(ggthemes)
  library(ggstream)
  library(ggforce)
  library(geomtextpath)
  library(ggHoriPlot)
  library(sysfonts)
  library(gtable)
  
}

#---------- Support Functions
suppressPackageStartupMessages(
  source(here::here("R/oisst_support_funs.R"), verbose = FALSE) )
suppressPackageStartupMessages(
  source(here("R/temp_report_support.R"), verbose = FALSE) )


#----------- Paths
oisst_path <- cs_path("res", "OISST/oisst_mainstays")

# File paths for various extents based on "apershing_gulf_of_maine"
region_paths <- get_timeseries_paths(
  region_group = "gmri_sst_focal_areas", 
  box_location = "cloudstorage")

# Folder for Comms Team Update
comm_folder <- cs_path("root", "Program Communications/Climate Center Comms/Warming Updates/Visuals/")

# Folder based on year
save_location <- str_c(comm_folder, "Annual ", params$report_year,"/")


#----------- Parameters

# Set the year for the report:
report_yr <- params$report_year

# # Box Location to save hi-res images
# save_location <- cs_path("root", "GoM Seasonal Climate Update/annual_update_figures")


#----------- Components

# Timeseries Path
timeseries_path <- region_paths[["apershing_gulf_of_maine"]][["timeseries_path"]]

# Polygon Path
poly_path <- region_paths[["apershing_gulf_of_maine"]][["shape_path"]]
region_extent <- read_sf(poly_path)

# Pull extents for the region for cropping
crop_x <- st_bbox(region_extent)[c(1,3)]
crop_y <- st_bbox(region_extent)[c(2,4)]

# Expand the area out to see the larger patterns, Used as plot limits
crop_x_expanded <- crop_x + c(-2.25, 2.25)
crop_y_expanded <- crop_y + c(-0.75, 0.75)

# Make a new extent for cropping to larger area
sfc <- make_cropbox(xlims = crop_x_expanded, ylims = crop_y_expanded)

# Projection to use for everything
master_crs <- st_crs("EPSG:4326")

# Coastline Shapes
canada      <- ne_states("canada", returnclass = "sf") %>% st_transform(master_crs)
new_england <- ne_states("united states of america", returnclass = "sf")
world_sf    <- ne_countries(returnclass = "sf")  %>% st_transform(master_crs)
greenland   <- ne_states(country = "greenland", returnclass = "sf") %>% st_transform(master_crs)

# Adding Logo to plots
lab_logo <- magick::image_read(
  paste0(system.file("stylesheets", package = "gmRi"), "/gmri_logo.png")
)

# Bathymetric Contour Data
bathy <- raster(str_c(cs_path("res","Bathy/"), "ETOPO1/NEShelf_Etopo1_bathy.tiff")) 

# Make a terra copyfor ggplot using tidyterra
elev_terra <- terra::rast(bathy)


# Map Tags
area_labs<- tribble(
  ~"label",              ~"lat", ~"lon", ~"angle", ~"color",
  "Georges\nBank",       41.15,  -67.75, 0,        "black",        
  "Jordan\nBasin",       43.5,   -67.5,  0,        "black", 
  "Wilkinson\nBasin",    42.29,  -69.2,  0,        "black", 
  "Northeast\nChannel",  42.385, -66.2,  0,        "black", 
  "Scotian\nShelf",      43.675, -63.2,  0,        "black", 
  "Mid-Atlantic\nBight", 40,     -72.6,  0,        "black", 
  "Laurentian Channel",  46.3,   -58.2,  310,      "black" )
```


```{r}
#| label: style-config
#| results: asis

# Use GMRI style
use_gmri_style_rmd()

```


```{r}
#| label: fonts-config
#| echo: false

# Path to the directory containing the font file (replace with your actual path)
font_dir <- paste0(system.file("stylesheets", package = "gmRi"), "/GMRI_fonts/Avenir/")

# Register the font
font_add(
  family = "Avenir",
  file.path(font_dir, "LTe50342.ttf"),
  bold = file.path(font_dir, "LTe50340.ttf"),
  italic = file.path(font_dir, "LTe50343.ttf"),
  bolditalic = file.path(font_dir, "LTe50347.ttf"))

# Load the font
showtext::showtext_auto()

```






```{r}
#| label: load-timeseries-data

#---------  Gulf of Maine Timeseries  --------#

# Load the timeseries
region_timeseries <- read_csv(
  file = timeseries_path, 
  col_types = cols(), 
  guess_max = 1e6)


# Clean up the data - add labels
region_timeseries <- region_timeseries %>% 
  mutate(time = as.Date(time)) %>% 
  distinct(time, .keep_all = T) %>% 
  supplement_season_info() %>% 
  filter(year %in% c(1982:report_yr))



# Get heatwave statuses for each day:
# Uses area weighted sst by default
region_hw <- pull_heatwave_events(
  temperature_timeseries = region_timeseries, 
  threshold = 90, 
  clim_ref_period = c("1991-01-01", "2020-12-31")) %>% 
  supplement_hw_data() %>% 
  filter(doy != 366)

# Summarize by year to return mean annual anomalies and variance
annual_summary <- region_hw %>% 
  group_by(year = yr) %>% 
  temperature_summaries_hw() %>% 
  mutate(yr_as_dtime = as.Date(paste0(year, "-07-02")),
         anom_direction = ifelse(sst_anom > 0, "Hot", "Cold"))


# Data for the Report Year Only
report_yr_only <- region_hw %>% 
  filter(year(time) == report_yr)

# Set up the date within a year for Heatmap
base_date <- as.Date("2000-01-01")
region_hw <- region_hw %>% 
  mutate(
    year = year(time),
    yday = yday(time),
    flat_date = as.Date(yday-1, origin = base_date),
    yr_rev = factor(year),
    yr_rev = fct_rev(yr_rev),
    hw_thresh_f = as_fahrenheit(mhw_thresh-seas, data_type = "anomalies"),
    cs_thresh_f = as_fahrenheit(mcs_thresh-seas, data_type = "anomalies"))
```


```{r}
#| label: load global timeseries
#---------  Global Oceans Timeseries  --------#

# # Global Temperature Anomalies
global_anoms <- read_csv(
    paste0(oisst_path, "global_timeseries/global_anoms_1991to2020.csv"), 
    guess_max = 1e6,
    col_types = cols()) %>% 
  mutate(year = year(time)) %>% 
  filter(between(year, 1982, report_yr)) %>% 
  supplement_season_info()

# summarize by year again
global_summary <- global_anoms %>% 
  group_by(year) %>% 
  temperature_summaries() %>% 
  mutate(yr_as_dtime = as.Date(paste0(year, "-07-02")),
         anom_direction = ifelse(area_wtd_anom > 0, "Hot", "Cold"))
```



```{r}
#| label: code-all-year-temp-summary

# Get the overall average and build labels
all_year_avgs <- annual_summary %>% 
  summarise(
    avg_temp_c = mean(sst),
    avg_temp_f = mean(sst_f),
    avg_anom_c = mean(sst_anom),
    avg_anom_f = mean(anom_f),            
    .groups = "drop") %>% 
  mutate(temp_label = str_c(round(avg_temp_c, 2), " \u00b0C  |  ", round(avg_temp_f, 2), " \u00b0F"))



# Values I need up front for text

# average annual sst, its anomaly value:
report_annual_temp <- round(mean(report_yr_only$sst_f, na.rm = T), 2)
report_annual_anom <- round(mean(report_yr_only$anom_f, na.rm = T), 2)

# What rank this year was
report_rank <- filter(annual_summary, year == report_yr) %>% pull(sst_rank)
global_report_rank <- filter(global_summary, year == report_yr) %>% pull(sst_rank)

# Record holder year's temperature
record_year_temp <- filter(annual_summary, sst_rank == 1) %>% pull(sst_f)

# Note on how the seasons ranked:
month_ranks <- region_timeseries %>% 
  supplement_season_info() %>% 
  split(.$month) %>% 
  map_dfr(~ .x %>% 
    group_by(year, month) %>% 
    temperature_summaries()) %>% 
    filter(year == report_yr)


# How many days in this year meet mhw criteria
# add some acknowledgement of the extreme characteristics:
hw_criteria <- report_yr_only %>% pull(mhw_event) %>% sum()
```



Over the past decade, scientists at the Gulf of Maine Research Institute have led a body of research that highlights the rapid pace of warming in the Gulf of Maine. To keep you informed, we share seasonal and annual updates about conditions in the Gulf of Maine.


## Highlights from the Year




## Annual Warming Trends in the Gulf of Maine



```{r}
#| label: code-warming-rates


####  Run Warming Rate regressions  ####
rate_data <- list(
  "GoM All F" = get_decadal_rates(
    temp_df = annual_summary, 
    temp_col = "area_wtd_f", 
    year_col = "year", 
    year_lim = c(1982, report_yr), 
    area_name = "GoM", 
    degree_c = F),
  "Global All F" = get_decadal_rates(
    temp_df = global_summary, 
    temp_col = "area_wtd_f", 
    year_col = "year", 
    year_lim = c(1982, report_yr), 
    area_name = "Global Ocean", 
    degree_c = F))



# Build Regression Equation Labels
eq_all_f    <- rate_data[["GoM All F"]][["eq_label"]]
eq_global_f <- rate_data[["Global All F"]][["eq_label"]]

```


Since the early 1980s, the rate of warming in the Gulf of Maine `r str_c(rate_data[["GoM All F"]][["decadal_rate"]], "\u00b0F / Decade")` has been more than triple that of the world’s oceans (`r str_c(rate_data[["Global All F"]][["decadal_rate"]], "\u00b0F / Decade")` @fig-global-comparison). 

The precise causes of the pronounced jump in annual average SSTs in the region from 2009 to 2012 remains an area of active research, but the sustained warm conditions suggest a regime shift in the influence of major ocean currents (i.e., Gulf Stream vs Labrador Current) in the Gulf of Maine. 

While a long-term increase in SSTs is expected as a result of human-caused climate change, we also expect each year to be influenced by large-scale patterns of natural variability, particularly on sub-global (i.e., regional) scales.

SST conditions in the Gulf of Maine for `r report_yr` retain the region’s distinction as being one of the fastest warming ocean regions on the planet; including the `r report_yr` data shows that the Gulf of Maine is warming faster than 97% of the world’s ocean surface. 


```{r}
#| label: fig-global-comparison
#| fig-cap: "A timeseries of annual average sea surface temperature anomalies for the Gulf of Maine (solid black line) from 1982 through 2024, illustrating that 2024 was the 2nd warmest year on record. Long-term trendlines for the Gulf of Maine (blue) and the entire globe (green) show how much more quickly the Gulf of Maine is warming compared to the rest of the world."


# Fahrenheit plot
temp_simplified <- global_rate_comparison(
  annual_summary_dat = annual_summary, 
  global_summary_dat = global_summary, 
  eq_all = str_remove(eq_all_f, "1982-2024"), 
  eq_global = str_remove(eq_global_f, "1982-2024"), 
  temp_units = "F",
  region_label = "Gulf of Maine") +
  coord_cartesian(clip = "off") +
  geom_logo(x_npc = 0.115, y_npc = -0.175, logo_height = 1, height_units = "cm") + 
  labs(color = str_c("1982-", params$report_year, " Warming Rates"))



temp_simplified 


```



## Comparing Annual SST to Historical Conditions

The annual average SST in the Gulf of Maine for `r report_yr` (`r str_c(report_annual_temp, deg_f)`) places it as the twelfth warmest year on record (@fig-yr-ranks). This marks the third consecutive year of year-over-year declines in average temperatures, while still comfortably seated  +0.88°F above the long-term average. 



```{r}
#| label: fig-yr-ranks
#| fig-cap: "A ranking of the top 10 annual SST values and those years’ respective SST anomalies."

# Plot year-over-year difference
# annual_summary %>% 
#   arrange(year) %>% 
#   transmute(
#     year = year,
#     temp_diff_f = area_wtd_f - lag(area_wtd_f)) %>% 
#   ggplot(aes(year, temp_diff_f)) +
#   geom_line()

# Do some data prep
rank_plot_data <- annual_summary %>% 
  filter(sst_rank <= 15) %>% 
  mutate(
    year_rank = fct_reorder(factor(year), sst_rank, .desc = T),
    rank = fct_rev(factor(sst_rank)),
    flag_col = ifelse(year == 2024, gmri_cols("lv orange"), gmri_cols("gmri blue")),
    temp_label    = str_c(round(sst_f, 2), " \u00b0F  |  ", round(sst, 2), " \u00b0C"),
    anom_label    = str_c(round(anom_f, 2), " \u00b0F  |  ", round(sst_anom, 2), " \u00b0C"),
    label_face = ifelse(year == 2024, "bold", "plain")) 


# Plot them
temp_rankings_p <- rank_plot_data %>% 
  ggplot() +
  geom_col(aes(x = anom_f, y = rank, fill = I(flag_col)))+
  # Year Labels
  geom_text(
    mapping = aes(
      x = 0, 
      y = rank, 
      label = str_c( year_rank)), # No numbering WINTER Control
      #label = str_c(rank, ".  ", year_rank)), # WINTER Control
    fontface = "bold",
    family = "Avenir",
    hjust = -.05,
    color = 'white',
    size = 5) +
 # Temperature Labels - Outside Bars
  geom_text(
    #data = filter(rank_plot_data, year == report_yr),
    mapping = aes(
      x = anom_f, y = rank, 
      label = temp_label, group = rank, color = I(flag_col), fontface = I(label_face)),
    family = "Avenir",
    hjust = -.05, size = 4, show.legend = F) +
  scale_x_continuous(
    labels = number_format(suffix = " \u00b0F"), 
    expand = expansion(mult = c(0,0.25))) +
  labs(
    x = "Average Annual SST Anomaly",
    y = "Rank",
    caption = "",
    title = str_c("Gulf of Maine Warmest Sea Surface Temperatures")) +
  theme(
    plot.background = element_blank(),
    panel.background = element_blank(),
    panel.border = element_blank(),
    axis.line.x = element_blank(),
    legend.position = "none", 
    plot.margin = margin(t = 20, l = 10, r = 5, b = 5)) +
  coord_cartesian(clip = "off") +
  geom_logo(x_npc = 0.875, y_npc = 1.075, logo_height = 1, height_units = "cm")


temp_rankings_p

```


###  Average Monthly Conditions

Monthly average SSTs (Table 1.) show how variable conditions were throughout the year. For the first third of the year, monthly SSTs were among the top three warmest for those months. May, June, July, & August average SSTs ranked lower, ranging from 4th to 12th warmest. The final four months were each much cooler, ranging from 12th to 19th warmest for those months. 

```{r}
#| label: tbl-monthly-avgs
#| tbl-cap-location: bottom
#| tbl-cap: "Average monthly sea surface temperatures in the Gulf of Maine"

# Would be cool to do a big table here of all months
# use formattable or whatever the package is.
# want a button style number indicating rank relative to past months
# want a sparkline indicating anomaly strength
# Indicat e % record temps or % HW

monthly_avgs <- region_hw %>% 
  filter(yr == 2024) %>% 
  group_by(yr, month) %>% 
  summarise(
    temp_c = mean(sst),
    clim_c = mean(seas),
    anom_c = mean(sst_anom),
    temp_f = as_fahrenheit(temp_c),
    clim_f = as_fahrenheit(clim_c),
    anom_f = as_fahrenheit(anom_c, data_type = "anomalies"),
    anom_list = list(anom_f), # list column for sparkline anomalies
    .groups = "drop") %>% 
  mutate(across(c(temp_c:anom_f), \(x) signif(x, digits = 3))) 

# Grab info on peak temps
peak_month <- monthly_avgs %>% slice_max(order_by = anom_f, n = 1)
peak_month_full <- month.name[which(month.abb == peak_month$month)]


# Do some benchmarking, where do they all rank by anomalies
month_rankings <- region_hw %>% 
  group_by(yr = year(time), month) %>% 
  summarise(mean_anom = mean(sst_anom), .groups = "drop") %>% 
  group_by(month) %>% 
  arrange(desc(mean_anom)) %>% 
  mutate(rank = rank(-mean_anom)) %>% 
  ungroup() %>% 
  arrange(rank, month)

# Add rankings back
monthly_avgs <- monthly_avgs %>% left_join(
  select(month_rankings, -c(mean_anom)),
  by = join_by(yr, month)) 


# Create the Monthly Summary Table
month_names <- data.frame("month" = month.abb, "month_full" = month.name)
month_summ_table <- monthly_avgs %>% 
  left_join(month_names) %>% 
  mutate(across(c(temp_c:anom_f),\(x) sprintf(x, fmt = '%#.1f'))) %>% 
  mutate(
    temp = md(str_c(temp_f, deg_f, " *(", temp_c, deg_c, ")*")),
    clim = str_c(clim_f, deg_f, " *(", clim_c, deg_c, ")*"),
    anom = str_c(anom_f, deg_f, " *(", anom_c, deg_c, ")*"),
    month = str_c("*", month_full, "*")) %>% 
  select(month, rank, temp, clim, anom) %>%
   gt(rowname_col = "month") %>% 
  tab_header(
    title = md(paste0("Table 1. Monthly Average Sea Surface Temperatures - ", params$report_year))) %>%
    tab_stubhead(label = md("Month")) %>% 
  fmt_markdown(
  columns = everything(),
  rows = everything(),
  md_engine = c("markdown", "commonmark")) %>% 
  cols_label( # Change the column names to the units
    rank = md("Rank (1982-2024)"),
    temp = md("Observed Temperature"),
    clim = md("Climatological Average"),
    anom = md("Temperature Anomaly")) %>% 
  tab_source_note(md("*Data Source: NOAA OISSTv2 Daily Sea Surface Temperature Data.*") ) %>% 
  tab_source_note(md("*Climatological Reference Period: 1991-2020.*")) %>% 
  opt_table_font(font = list(google_font(name = "Raleway")))

# # Display Table
month_summ_table



```





## Daily SSTs in the Gulf of Maine




```{r}
#| label: txt-extreme-events

# typical range
seasonal_cycle_min <- min(report_yr_only$seas_f)
seasonal_cycle_max <- max(report_yr_only$seas_f)
seasonal_range <- round(seasonal_cycle_max - seasonal_cycle_min, 2)

# report_yr range
report_yr_min <- min(report_yr_only$sst_f)
report_yr_min_anom <- round(min(report_yr_only$anom_f), 2)
report_yr_min_date <- format(report_yr_only$time[report_yr_only$sst_f == report_yr_min], "%b-%d")
report_yr_max <- max(report_yr_only$sst_f)
report_yr_max_date <- format(report_yr_only$time[report_yr_only$sst_f == report_yr_max], "%b-%d")
report_yr_max_anom <- max(report_yr_only$anom_f)
report_yr_max_anom_date <- format(report_yr_only$time[report_yr_only$anom_f == report_yr_max_anom], "%b-%d")
report_yr_range <- round(report_yr_max - report_yr_min, 2)
report_yr_max <- round(report_yr_max, 2)
report_yr_max_anom <- round(report_yr_max_anom, 2)
report_yr_min <- round(report_yr_min, 2)
```




The annual cycle of SST in the Gulf of Maine exhibits a pattern common to regions in the Northern Hemisphere, with the lowest temperatures observed in March and the highest values observed in August (@fig-annual-hw-timeseries). Daily SST anomalies in `r report_yr` never fell below +`r report_yr_min_anom` °F compared to the long-term (1991-2020) average and reached as high as high as `r floor(report_yr_max_anom)` °F above the long-term average. 

The largest temperature anomalies were observed during November, which also turned out to be the warmest November on record (as highlighted in our [Fall 2022 update](https://www.gmri.org/stories/gulf-of-maine-warming-update-fall-2022/)). @fig-annual-hw-timeseries also illustrates that, in `r report_yr`, `r sum(report_yr_only$mhw_event)` days experienced SST anomalies that exceeded the threshold for being considered marine heatwaves, or MHW (more on MHWs below, including @fig-mhw-heatmap)


```{r}
#| label: fig-annual-hw-timeseries
#| fig.height: 4
#| fig-cap: "A timeseries of daily SSTs (January 1 through December 31, 2024) with an indication of marine heatwave (MHW) conditions in the Gulf of Maine. Black lines represent the long-term (i.e., 1991 – 2020) average SST, the 10th percentile (i.e., cold spell threshold), and 90th percentile (i.e., heatwave threshold). A solid line indicates the observed SST for each day; red and blue shading illustrates whether each day is considered part of a MHW event."


# annual heatwave timeseries

# Build a new one from scratch ------------

year_hw_dat <- report_yr_only
temp_units <- "F"

# Augment Data
  year_hw_dat <- mutate(
    year_hw_dat, 
    cs_thresh_f = as_fahrenheit(mcs_thresh),
    mhw_event_txt = if_else(mhw_event, "Marine Heatwave", "Non-Heatwave"))
  
  
  # Handling Temperature Units:
  temp_ops <- switch (
    EXPR = temp_units,
    "C" = list(
      temp_col  = expr(sst),
      anom_col  = expr(sst_anom),
      seas_col  = expr(seas),
      hw_thresh = expr(mhw_thresh),
      cs_thresh = expr(mcs_thresh),
      hw_temp   = expr(hwe),
      temp_suff = " \u00b0C"),
    "F" = list(
      temp_col  = expr(sst_f),
      anom_col  = expr(anom_f),
      seas_col  = expr(seas_f),
      hw_thresh = expr(mhw_thresh_f),
      cs_thresh = expr(cs_thresh_f),
      hw_temp   = expr(hwe_f),
      temp_suff = " \u00b0F"))
  
  # Assign to shorter names
  temp_col      <- temp_ops$temp_col
  anom_col      <- temp_ops$anom_col
  clim_col      <- temp_ops$seas_col
  hw_thresh_col <- temp_ops$hw_thresh
  cs_thresh_col <- temp_ops$cs_thresh
  hw_temp_col   <- temp_ops$hw_temp
  
  # Set colors by name
  color_vals <- c("Non-Heatwave" = "#0571B0", "Marine Heatwave" = "darkred")
  
  # Flag heatwave Events:
  hw_events <- year_hw_dat %>% 
    filter(mhw_event == T) %>% 
    group_split(mhw_event_no) %>% 
    map_dfr(function(x){
      data.frame(
        id = unique(x$mhw_event_no),
        llim = min(x$time),
        rlim = max(x$time),
        ymax = max(x$sst_f),
        min_anom = min(x$anom_f),
        max_anom = max(x$anom_f),
        mean_anom = mean(x$anom_f),
        len  = nrow(x))
    })

  
# Make a df with the label positions to avoid textpath
clim_labels_df <- year_hw_dat %>% 
  tail(1) %>% 
  select(time, {{hw_thresh_col}}, {{clim_col}}, {{cs_thresh_col}}) %>% 
  pivot_longer(cols = !"time", values_to = "y", names_to = "labs") %>%
  mutate(
    labels = case_when(
      labs == hw_thresh_col  ~ "- 90th Percentile",
      labs == clim_col       ~ "- 1991-2020 Average",
      labs == cs_thresh_col  ~ "- 10th Percentile"),
    y = case_when(
      labs == hw_thresh_col  ~ y+0.75,
      labs == clim_col       ~ y+0,
      labs == cs_thresh_col  ~ y-0.9),
    hjust = 5+time)
  



# Build the Plot
hw_temp_p <- ggplot(year_hw_dat) +
    geom_path(aes(x = time, y = {{temp_col}}, color = mhw_event_txt, group = 1), linewidth = 0.8, key_glyph = "timeseries") +
    geom_segment(aes(x = time, xend = time, y = {{clim_col}}, yend = {{temp_col}}, color = mhw_event_txt), alpha = 0.25,
                 show.legend = F) +
  geom_path(
    aes(x = time, y = {{hw_thresh_col}}),
    color = "gray10",lty = 1,) +
  geom_path(
    aes(x = time, y = {{clim_col}}),
    color = "gray10", lty = 1) +
  geom_path(
    aes(x = time, y = {{cs_thresh_col}}),
    color = "gray10", lty = 1) +
  geom_text(
    data = clim_labels_df,
    aes(x = hjust, y = y, label = labels), 
    family = "Avenir", hjust = 0, size = 3.5) +
    geom_bracket(
      data = hw_events, 
      aes(xmin = llim, xmax = rlim, y.position = ymax + 2, label = str_c(len, " Days")), 
      family = "Avenir") +
    scale_color_manual(values = color_vals) +
    scale_x_date(
      date_labels = "%b", 
      date_breaks = "1 month", 
      expand = expansion(add = c(0,115)),
      limits = as.Date(str_c(params$report_year, c("-01-01", "-12-31"))) +c(0,30)) +
    scale_y_continuous(
      labels =  number_format(suffix = temp_ops$temp_suff),
      expand = expansion(mult = c(0.05, .1))) +
    theme(legend.position = "bottom") +
    labs(
      title = str_c("2024: Gulf of Maine SST"),
      x = NULL, 
      color = "Sea Surface Temperature & Heatwave Status:",
      fill = "Difference from Average SST",
      y = "Sea Surface Temperature") +
  coord_cartesian(clip = "off") +
  geom_logo(x_npc = 0.85, y_npc = 1.12, logo_height = 1, height_units = "cm")

# Show plot
hw_temp_p

```

### SST Anomalis & MHW Events


A marine heatwave (MHW) is defined as a period when there are five or more consecutive days when the observed SST is greater than the 90th percentile of the long-term average for that day. Gaps of 2 days or less in this threshold do not constitute a break in the MHW event. @fig-annual-hw-timeseries  illustrates that the Gulf of Maine met the criteria for experiencing a MHW for `r hw_criteria` days in `r report_yr` (or `r round((hw_criteria/365)*100)`% of the year). Superimposing MHW status (black line) over the full timeseries of daily SST anomalies (blue/white/red shading) (@fig-annual-hw-timeseries) reveals that the frequency, duration, and intensity of MHWs has increased in the past decade. 


```{r}
#| label: fig-season-mhw-timeline
#| fig-height: 5
#| eval: true
#| fig-cap: "A timeseries of marine heatwave (MHW) conditions in the Gulf of Maine extending from January 1, 2024 through December 31, 2024. The black line represents the long-term (i.e., 1991 – 2020) average SST. The 10th to 90th percentile range is shaded in gray. The heavy line (red for marine heatwave or blue for a non-event) indicates the observed SST this year."


# # How hot and cold were the largest anomd
# year_hw_dat %>% arrange(desc(anom_f)) %>% slice(1) %>% select(time, anom_f)
# year_hw_dat %>% arrange(anom_f) %>% slice(1) %>% select(time, anom_f)
# # How many cold spell days
# year_hw_dat %>% filter(sst < mcs_thresh) %>% View()


# Do this one over again:
hw_anom_p <- year_hw_dat %>% 
  mutate(
      hw_anom_thresh = {{ hw_thresh_col }} - {{ clim_col }},
      cs_anom_thresh    = {{ cs_thresh_col }} - {{ clim_col }}) %>% 
  ggplot() +
  geom_ribbon(aes(x = time, ymin = cs_anom_thresh, ymax = hw_anom_thresh), fill = "lightgray", alpha = 0.4) +
    geom_path(aes(x = time, y = {{anom_col}}, color = mhw_event_txt, group = 1), linewidth = 0.8, key_glyph = "timeseries") +
    geom_textpath(
      aes(x = time, y = 0), 
      color = "gray10", 
      label = "Climatological Avg. +/-\n10th-90th Percentile Range", 
      hjust = 0.5, lty = 1, family = "Avenir", vjust = 1.2, size = 5) +
    geom_bracket(
      data = hw_events, 
      aes(xmin = llim, xmax = rlim, y.position = max_anom + 1, label = str_c(len, " Days")), 
      family = "Avenir") +
    scale_color_manual(values = color_vals) +
    scale_x_date(
      date_labels = "%b", 
      #date_labels = "%b %y", 
      date_breaks = "1 month", 
      expand = expansion(add = c(0,0))) +
    scale_y_continuous(
      labels =  number_format(suffix = temp_ops$temp_suff),
      expand = expansion(mult = c(0.05, .2))) +
    theme(legend.position = "bottom", legend.title = element_text(face = "bold")) +
    labs(title = str_c("2024: Gulf of Maine SST Anomalies"),
         x = NULL, 
         color = "SST Anomalies & Heatwave Status:",
         fill = "Difference from Average SST",
         y = "Sea Surface Temperature Anomaly") +
  coord_cartesian(clip = "off") +
  geom_logo(x_npc = 0.85, y_npc = 1.1, logo_height = 1, height_units = "cm")

# Show plot
hw_anom_p
  
```




### Gulf of Maine SST Heatmap


Since 2010 the Gulf of Maine has experienced a disproportionate number of anomalously hot SSTs and prolonged MHW events. Cooler than average SSTs during this period are rare, but examples of cooler periods can be found (ex. 2019). 



```{r}
#| label: fig-mhw-heatmap
#| fig-cap: "Heat map of daily SST anomalies from the beginning of 1982 through the end of 2024. Not only do more large warm anomalies (darker reds) appear more frequently in recent years, but the frequency and duration of marine heatwave events (black lines) in the Gulf of Maine has become more pronounced in the past decade."
#| fig-alt: "A figure displays the temperatures for each day of year as a colored stripe, organized with a row for each day such that the day of year aligns vertically. The lower two-thirds has a roughly equal balance between colors for warm (red) and cold (blue) temperature anomalies. The top third of the image is almost completely red as temperature anomalies rarely fall below the long-term average. Black dots are overlaid onto days that meet the criteria for a heatwave, they are rare in the lower section and common in the red section."
#| fig.height: 8


# Heatmap: All years:
heatmap_p <- region_hw %>% 
  heatwave_heatmap_plot(temp_units = "F", start_yr = 1981, end_yr = 2024) +
  labs(title = "Gulf of Maine Heatwave Record",
       y = "Year",
       x = "Month") +
  theme(legend.position = "bottom",
        legend.title = element_text(angle = 0),
        plot.margin = margin(b = 0, t = 20)) +
  guides(fill = guide_colorbar(
    title = "Sea Surface Temperature Anomaly",
    title.position = "top", 
    title.hjust = 0.5, barwidth = unit(3.5, "in"), 
    barheight = unit(0.5, "cm"), 
    frame.colour = "black", 
    ticks.colour = "black")) +
  coord_cartesian(clip = "off") +
  geom_logo(x_npc = 0.9, y_npc = 1.05, logo_height = 1, height_units = "cm")

heatmap_p + labs(caption = "")
```



### Quarterly SST Trends


Zooming in to sub-annual timescales reveals some interesting patterns: the observed rate of warming in the Gulf of Maine varies throughout the year. Comparisons across the four quarters of the year  (@fig-seasons-comparison) reveal that the Gulf of Maine is warming fastest during July-September (~4x the global ocean average)—almost twice the rate seen during January-June (~3x the global ocean average).



```{r}
#| label: fig-seasons-comparison
#| fig-cap: "Timeseries panels of the annual averages of SST for each quarter (dashed black lines) in the Gulf of Maine. Trendlines are overlaid for the Gulf of Maine (blue) and the global ocean surface (green)."
#| fig.width: 8
#| fig.height: 7


# Pull the data out by season: annual_summary steps but for each season
season_summary <- region_timeseries %>% 
  mutate(
    month_groups = case_when(
      month %in% c("Jan", "Feb", "Ma")   ~ "January - March",
      month %in% c("Apr", "May", "Jun")  ~ "April - June",
      month %in% c("Jul", "Aug", "Sep")  ~ "July - September",
      month %in% c("Oct", "Nov", "Dec")  ~ "October - December")) %>% 
  group_by(yr, month_groups) %>% 
  temperature_summaries()

global_season_summary <- global_anoms %>% 
  mutate(
    month_groups = case_when(
      month %in% c("Jan", "Feb", "Ma")   ~ "January - March",
      month %in% c("Apr", "May", "Jun")  ~ "April - June",
      month %in% c("Jul", "Aug", "Sep")  ~ "July - September",
      month %in% c("Oct", "Nov", "Dec")  ~ "October - December")) %>% 
  group_by(yr, month_groups) %>% 
  temperature_summaries() 




# Think we can Facet, but then the stupid rates won't be there...
season_avgs <- bind_rows(
  list(
    "Gulf of Maine" = season_summary,
    "Global Ocean" = global_season_summary), 
  .id = "Region") %>% 
  mutate(month_groups = factor(month_groups,
    levels = c("January - March", "April - June", "July - September", "October - December")))


# Decadal Rates Function
rate_calc <- function(.data){
   annual_lm <- lm(anom_f ~ yr, data = .data)
    rate_x <- round(coef(annual_lm)["yr"] * 10, 2)
    eq_lab <- paste0(": ", rate_x, deg_f, " / Decade")
    mutate(.data, rate_eq = eq_lab)
}


# Run the numbers to make the label
season_avgs <- season_avgs %>% 
  group_by(Region, month_groups) %>% 
  group_map( ~rate_calc(.), .keep = TRUE) %>% 
  bind_rows() %>% 
  mutate(rate_eq = str_c(Region, rate_eq))



# Make the four panels:
season_panels <- season_avgs %>% 
  split(.$month_groups) %>% 
  imap(function(x, y){
    
    season_p <- ggplot(x, aes(yr, anom_f)) +
      geom_line( data = filter(x, Region == "Gulf of Maine"), color = "gray20", alpha = 0.5, linewidth = .5, linetype = 3) +
      geom_point(data = filter(x, Region == "Gulf of Maine"), color = "gray20", size = 2, alpha = 0.8) +
      stat_smooth(
        aes(color = rate_eq), 
        method = "lm", 
        formula = y~x, 
        linetype = 1, 
        linewidth = 1.5, 
        alpha = 0.8,
        se = FALSE) +
      facet_wrap(~month_groups, ncol = 2) +
      scale_color_manual(values = c(gmri_cols("blue economy teal"), gmri_cols("gmri blue"))) +
      scale_y_continuous(labels = number_format(suffix = deg_f)) +
      theme(
        legend.position = "bottom", legend.direction = "vertical",
        legend.background = element_rect(color = "black", fill = "white")) +
      guides(color = guide_legend(title.position = "top", title.hjust = 0.5)) +
      labs(
        x = NULL, 
        y = "SST Anomaly",
        color = str_c(y, " Trend (1982-2024)"))
    
    # Signal that winter isn't over...
    if(y == "October - December"){
      season_p <- season_p +
        geom_point(data = filter(x, yr == 2024, Region == "Gulf of Maine"), aes(yr, anom_f),
                   shape = 21, color = "black", fill = "white", size = 1.5)}
    
    
    # Return the plot for that season
    season_p
      
  })


# Assemble the plot
panel_plot <- (season_panels$`January - March` |season_panels$`April - June`) / (season_panels$`July - September` | season_panels$`October - December`) + plot_annotation(caption = "") &
  theme(plot.margin = margin(t = 10, b = 5, r = 2, l = 2))

panel_plot
grid::grid.raster(lab_logo, x = 0.08, y = 0, just = c('left', 'bottom'), height = unit(1, "cm"))
```




## Annual SST Anomaly Map

In addition to the sub-annual (or temporal) variation, there can also be significant spatial variability in annually-averaged SST patterns (@fig-new-england-map). 

This year the impacts of large-scale variability in major oceanic currents, such as the relative influence of the Gulf Stream versus the Labrador Current was quite apparent. With large pockets of above and below average SST anomalies present along the turbulent path of the Gulf Stream to the South of our study area.


```{r}
#| label: fig-new-england-map
#| fig-cap: "Map of annual average sea surface temperature anomalies in 2024. The box outlined by the black dashed line denotes the region of study for the analysis presented throughout this report."
#| fig.height: 6


# Set time limits to get data
annual_dates <- as.Date(
  c(str_c(report_yr,"-01-01"), str_c(report_yr,"-12-31")))

# Make data window for the year
data_window <- data.frame(
  lon = c(-81, -54.5),
  lat = c(33.5, 50),
  time = annual_dates)

# Load data, stack and tidy
ne_anoms <- oisst_window_load(
    data_window = data_window,
    anomalies = T,
    box_location = "cloudstorage", climate_ref = "1991-2020") %>%  
  stack()

# Convert to F
ne_anoms_f <- calc(ne_anoms, function(x) as_fahrenheit(x, data_type = "anomalies")) %>% 
  setNames(names(ne_anoms))

# Process the yearly average
ne_annual_anom_f <- mean(ne_anoms_f, na.rm = T)



# Color limit for palettes
temp_limits <- c(-4, 4)
temp_breaks <- c(temp_limits[1], temp_limits[1]/2,  0, temp_limits[2]/2, temp_limits[2])
temp_labels <- str_c(c(str_c("< ", temp_limits[1]), temp_limits[1]/2, 0, temp_limits[2]/2, str_c("> ", temp_limits[2])), "\u00b0F")


# Make it a stars class to plot with ggplot
ne_anoms_st <- st_as_stars(ne_annual_anom_f)



#### 1. Map the Anomalies in Space
annual_gom_map <- ggplot() +
  geom_stars(data = ne_anoms_st) +
  tidyterra::geom_spatraster_contour(
    data = elev_terra,
    breaks = seq(0,-200,-100),
    alpha = 0.75) +
  geom_sf(data = new_england, fill = "gray90", linewidth = .15) +
  geom_sf(data = canada, fill = "gray90", linewidth = .15) +
  geom_sf(data = region_extent,
          color = "black",
          linetype = 2, linewidth = 1,
          fill = "transparent") +
  scale_y_continuous(breaks = seq(30, 50, by = 2)) +
  scale_fill_distiller(
    palette = "RdBu", 
    na.value = "transparent", 
    limit = temp_limits, 
    labels = temp_labels,
    oob = scales::oob_squish) +
  coord_sf(xlim = c(-78, -56.5), ylim = c(37.8, 48)) +
  labs(title = str_c(report_yr, ": Average Temperature Anomalies"),
       caption = "Anomalies calculated using 1991-2020 climatology.\n100m & 200m contours overlaid to show bathymetric details.") +
  map_theme(
    legend.position = "bottom",
    legend.title = element_text(angle = 0, face = "bold", family = "Avenir"))+
  guides("fill" = guide_colorbar(
    title = "Average Temperature Anomaly ",
    title.position = "top",
    title.hjust = 0.5,
    barwidth = unit(3, "in"),
    frame.colour = "black",
    ticks.colour = "black")) 

# Show figure
annual_gom_map
grid::grid.raster(lab_logo, x = 0.1, y = 0.05, just = c('left', 'bottom'), height = unit(1, "cm"))


```



### Quarterly Average SST Maps

Looking at these spatial patterns across the annual quarters of `r report_yr` (@fig-four-season-maps) shows not only the large spatial variability in SST conditions, but also the significant variation in those patterns over the course of the year. 


```{r}
#| label: fig-four-season-maps
#| fig-cap: "Four-panel maps displaying the quarterly average SST anomalies in 2024."
#| fig.width: 8
#| fig.height: 6

# Four Season Panels

# Process the stack into the four 3-month averages
# Set time limits
season_dates <- list(
  "January - March" = distinct(filter(report_yr_only, month %in% c("Jan", "Feb", "Mar")), time) %>% pull(time),
  "April - June" = distinct(filter(report_yr_only, month %in% c("Apr", "May", "Jun")), time) %>% pull(time),
  "July - September"   = distinct(filter(report_yr_only, month %in% c("Jul", "Aug", "Sep")), time) %>% pull(time),
  "October - December" = distinct(filter(report_yr_only, month %in% c("Oct", "Nov", "Dec")), time) %>% pull(time))

# Grab the dates for each, process the mean 
season_stacks <- map(season_dates, function(x){
  dates_x <- str_c("X", str_replace_all(x, "-", "."))
  which_dates <- which(names(ne_anoms_f)  %in% dates_x)
  month_mean <- mean(ne_anoms_f[[which_dates]], na.rm = T)
  
})


# Assemble Panels Again:
season_panel_maps <- imap(season_stacks, function(x, seasn){
  
  season_df <- data.frame("season" = seasn)
  ne_season_st <- st_as_stars(x)
  season_map <- ggplot(data = season_df) +
    geom_stars(data = ne_season_st) +
    tidyterra::geom_spatraster_contour(
      data = elev_terra,
      breaks = seq(0,-200,-100),
      alpha = 0.75) +
    geom_sf(data = new_england, fill = "gray90", 
            linewidth = .25) +
    geom_sf(data = canada, fill = "gray90", 
            linewidth = .25) +
    geom_sf(data = greenland, fill = "gray90", 
            linewidth = .25) +
    geom_sf(data = region_extent, 
            color = "black", 
            linetype = 2, 
            linewidth = 1,
            fill = "transparent") +
    scale_y_continuous(breaks = seq(30, 50, by = 2)) +
    scale_fill_distiller(palette = "RdBu", 
                         na.value = "transparent", 
                         limit = temp_limits, 
                         labels = temp_labels,
                         oob = scales::oob_squish) +
    coord_sf(xlim = c(-78, -56.5), ylim = c(37.8, 48)) +
    facet_wrap(~season) +
    map_theme(
      legend.position = "bottom",
      legend.title = element_text(angle = 0))+
    guides("fill" = guide_colorbar(
      title = "Average Temperature Anomaly ",
      title.position = "top",
      title.hjust = 0.5,
      barwidth = unit(3, "in"),
      frame.colour = "black",
      ticks.colour = "black")) 

# Show figure
season_map
})



# Put them together and format them
season_panels_all <- (
  season_panel_maps$`January - March` | 
    season_panel_maps$`April - June`) / 
  (season_panel_maps$`July - September` | 
     season_panel_maps$`October - December`) +
  plot_layout(guides = "collect") & 
  theme(
    legend.position = 'bottom', 
    legend.title = element_text(face = "bold", family = "Avenir"),
    plot.margin = margin(t = 1, b = 1, r = 2, l = 2)) 

# Display them
season_panels_all
grid::grid.raster(lab_logo, x = 0.08, y = 0.04, just = c('left', 'bottom'), height = unit(1, "cm"))

```




## SSTs Across the North Atlantic


In a departure from the now-familiar pattern of regionally concentrated warming, much of the attention this year was on large areas in the eastern Atlantic experiencing a large-scale MHW event. This summer scientists sounded the alarm over record setting temperatures for much of the Eastern Atlantic impacting population centers along the European coast and contributing to sweltering temperatures on land.

Beginning in March, the North Atlantic as a whole began experience day-after-day of record warm sea surface temperatures, particularly in the east near Europe. By June and July, the separation between the region's SSTs and the previous records had widened by over a degree, creating a dramatic and alarming figure that was shared widely on social media. @fig-natl-timeseries captures how profoundly and consistently hot this year's temperatures were across the North Atlantic. SST in the North Atlantic set daily record highs for a total of **301 days** this year (82%!). Every single day beginning on March 5th has set a new record daily SST values, with margins exceeding 1F. These facts have drawn increased attention, elevated concerns, and a renewed sense of urgency for understanding the causes behind the rapidly changing ocean environment.




```{r}
#| label: albers north atlantic inset
#| eval: true




# Making a Better Inset with albers equal area projection
alb_midatlantic <- st_crs("+proj=aea +lat_1=20 +lat_2=50 +lon_0=-40")
sf_use_s2(FALSE)


# Make North Atlantic BBox
north_atl_box <- make_cropbox(xlims = c(-80, 0), ylims = c(0, 60)) %>% 
  st_set_crs(4326)


n_atl_inset_plot <- ggplot() +
  # geom_sf(
  #     data = north_atl_box,
  #     color = "transparent", 
  #     #fill = "orange", 
  #     fill = gmri_cols("gmri blue"), 
  #     alpha = 0.2, 
  #     linewidth = 0.8) +
  geom_sf(
    data = st_crop(
      world_sf, 
      make_cropbox(xlims =c(-130, 80), ylims = c(-20,80))),
    fill = "gray40", linewidth = .1, color = "white") +
  geom_sf(
      data = north_atl_box,
      color = "orange", 
      fill = "orange", 
      alpha = 0.2, 
      linewidth = 0.8) +
  coord_sf(
    crs = alb_midatlantic,
    xlim = c(-6063714, 6063714),
    ylim = c(937671, 7551900 )) +
  theme(axis.text = element_blank(), 
        axis.ticks.x = element_blank(),
        axis.ticks.y = element_blank())


```





```{r}
#| label: fig-natl-timeseries
#| fig-cap: "Timeseries for each of the three years that hold record daily SSTs for the North Atlantic (2020 = light green, 2022 = blue, 2024 = orange), record setting SSTs shown in  bold. The 1991-2020 average daily SST (black) and 10th - 90th percentile range is shown in gray."

# Load the timeseries for the spaghetti plot
natl_ts <- read_csv(here("notebooks/nb_testing_data/north_atlantic_sst_1982to2024.csv"))

# Get the heatwave situation
natl_ts <- pull_heatwave_events(
  natl_ts, 
  clim_ref_period = c("1991-01-01", "2020-12-31"), 
  temp_col = "area_wtd_sst")

# Clean up
natl_ts <- natl_ts %>% 
  mutate(yr = year(time),
         is_23 = ifelse(yr == 2023, TRUE, FALSE),
         yr_col   = ifelse(is_23, gmri_cols("lv orange"), "gray90"),
         yr_lw    = ifelse(is_23, 1.5, 0.8),
         yr_alpha = ifelse(is_23, 1, 0.5),
         flat_date = as.Date("2000-01-01") + doy-1,
         anom_f = as_fahrenheit(sst_anom, data_type = "anomalies"),
         hw_thresh_f = as_fahrenheit(mhw_thresh-seas, data_type = "anomalies"),
         cs_thresh_f = as_fahrenheit(mcs_thresh-seas, data_type = "anomalies"))



#----- Plot how unusual this year was:



# Flag when temperatures were records
natl_hottest_days <- natl_ts %>% 
  group_by(doy) %>% 
  slice_max(order_by = sst_anom, n = 1) %>% 
  ungroup() 

# Get some visual controls for when they are records
# Just pull them as one dataframe that can be labelled separately
natl_record_yrs <- natl_ts %>% 
  filter(yr %in% unique(natl_hottest_days$yr))  %>% 
  mutate(
    is_record = time %in% natl_hottest_days$time,
    record_temp_alpha = ifelse(is_record, 1, 0.4),
    record_temp_lw = ifelse(is_record, 1, 0.5))


# Pull the most important single years
natl_23 <- filter(natl_record_yrs, yr == 2023) 
natl_24 <- filter(natl_record_yrs, yr == 2024)



# Make the plot
north_atl_plot <- natl_23 %>% 
  ggplot(aes(flat_date, anom_f)) +
  geom_ribbon(aes(ymin = cs_thresh_f, ymax = hw_thresh_f), 
              fill = "lightgray", alpha = 0.4) +
  geom_texthline(
    data = data.frame(yintercept = 0),
    aes(yintercept = yintercept), 
    label = "1991-2020 Climatological Average +/-\n10th - 90th Percentile Range", 
    linewidth = 1, size = 4, family = "Avenir") +
  # Plot the data for years that set record daily temperatures
  geom_line(
    data = natl_record_yrs,
    aes(group = yr, color = factor(yr), linewidth = I(record_temp_lw), alpha = I(record_temp_alpha)), 
    show.legend = F) +
  geom_text(
    data = natl_23 %>% slice(yday(max(natl_ts$time))-110),
    label = "2023", vjust = -1, size = 4,
    fontface = "bold", color = gmri_cols("gmri blue"), family = "Avenir") +
  geom_text(
    data = natl_24 %>% slice(yday(max(natl_ts$time))-210),
    label = "2024", vjust = -1, size = 4,
    fontface = "bold", color = gmri_cols("lv orange"), family = "Avenir") +
scale_color_gmri() +
  scale_x_date(
    date_breaks = "1 month", labels = date_format("%b"), 
    expand = expansion(add = c(0,0))) +
  scale_y_continuous(labels = number_format(suffix = deg_f)) +
  labs(x = "Day of Year", y = "Sea Surface Temperature Anomaly",
       title = str_c("2024 Set Record Warm Daily SSTs on ", sum(natl_24$is_record)," Days in North Atlantic"),
       subtitle = "(0-60N, 0-80W)")  +
  coord_cartesian(clip = "off") +
  
  theme(text = element_text(family = "Avenir")) +
  geom_logo(x_npc = 0.875, y_npc = -.15, logo_height = 1, height_units = "cm")



# Add the North Atlantic Map Inset
north_atl_plot <- north_atl_plot + 
  inset_element(
    p = n_atl_inset_plot + theme(plot.margin = margin(0,0,0,0), plot.background = element_blank()), 
    left = 0.01, 
    top = 0.2, 
    bottom = 0.01,
    right =  0.2)

north_atl_plot


```






## Changes in a Global Context

It was not just the Gulf of Maine that experienced exceptional warmth in `r report_yr`. Globally, `r report_yr` was the warmest year for both sea surface temperatures and [combined land & ocean temperatures](https://www.noaa.gov/news/2024-was-worlds-warmest-year-on-record-by-far#:~:text=Earth's%20average%20land%20and%20ocean,0.15%20of%20a%20degree%20C).

@fig-global-anomalies shows annual average SST anomalies for oceans all over the world in `r report_yr`. From this view we can see how much of the Southern Ocean and expanses of the southeastern Pacific were anomalously warm (a general feature of El Niño conditions). Closer to home here in the United States, we see both unusually high and unusually low SSTs along the Gulf Stream's path as it extends East away from Cape Hatteras.






```{r}
#| label: orthographic-projection-setup
#| eval: true

# This code was instrumental:
# https://gist.github.com/fzenoni/ef23faf6d1ada5e4a91c9ef23b0ba2c1

# Define the orthographic projection
# lat = 25 works well
lat <- 25
lon <- -55
ortho_west <- paste0('+proj=ortho +lat_0=', lat, ' +lon_0=', lon, ' +x_0=0 +y_0=0 +a=6371000 +b=6371000 +units=m +no_defs')
ortho_east <- paste0('+proj=ortho +lat_0=', lat, ' +lon_0=', lon+180, ' +x_0=0 +y_0=0 +a=6371000 +b=6371000 +units=m +no_defs')


# Get the hemisphere disc as a polygon out from a central point:
# Define a circle polygon that will help you finding the "blade"
# to split what lies within and without your projection
circle_west <-  st_point(x = c(0,0)) %>% 
  st_buffer(dist = 6371000) %>% 
  st_sfc(crs = ortho_west)
circle_east <-  st_point(x = c(0,0)) %>% 
  st_buffer(dist = 6371000) %>% 
  st_sfc(crs = ortho_east)



# Circle boundaries cannot be used as-is:
# You must decompose it into a string with ordered longitudes
# Then complete the polygon definition to cover the hemisphere

prepare_ortho_circle <- function(circle_poly, lat, lon){
  
  if(lat != 0) {
    # Project the boundary polygon into lat-lon coords
    circle_longlat <- circle_poly %>% 
      st_transform(crs = 4326) %>% 
      st_boundary()
    
    circle_coords <- st_coordinates(circle_longlat)[, c(1,2)]
    circle_coords <- circle_coords[order(circle_coords[, 1]),]
    circle_coords <- circle_coords[!duplicated(circle_coords),]
    
    # Rebuild line
    circle_longlat <- st_linestring(circle_coords) %>% 
      st_sfc(crs = 4326)
    
    if(lat > 0) {
      rectangle <- list(rbind(circle_coords,
                              c(X = 180, circle_coords[nrow(circle_coords), 'Y']),
                              c(X = 180, Y = 90),
                              c(X = -180, Y = 90),
                              c(X = -180, circle_coords[1, 'Y']),
                              circle_coords[1, c('X','Y')])) %>% 
        st_polygon() %>% st_sfc(crs = 4326)
    } else {
      rectangle <- list(rbind(circle_coords,
                              c(X = 180, circle_coords[nrow(circle_coords), 'Y']),
                              c(X = 180, Y = -90),
                              c(X = -180, Y = -90),
                              c(X = -180, circle_coords[1, 'Y']),
                              circle_coords[1, c('X','Y')])) %>% 
        st_polygon() %>% st_sfc(crs = 4326)
    }
    
    circle_longlat <- st_union(st_make_valid(circle_longlat), st_make_valid(rectangle))
}
  
  return(circle_longlat)
  
}



# Run the circle polygon prep
circle_longlat_w <- prepare_ortho_circle(
  circle_poly = circle_west,
  lat = lat,
  lon = lon)

# and again for eastern hemisphere
circle_longlat_e <- prepare_ortho_circle(
  circle_poly = circle_east,
  lat = lat,
  lon = lon+180)



# Now use intersection to get the polygons and their intersection with circle
# A small negative buffer is necessary to avoid polygons still disappearing in a few pathological cases
# I should not change the shapes too much
sf::sf_use_s2(FALSE)
visible_w <- st_intersection(
    st_make_valid(world_sf), 
    st_buffer(circle_longlat_w, -0.09)) %>%
  st_transform(crs = ortho_west)
visible_e <- st_intersection(
    st_make_valid(world_sf), 
    st_buffer(circle_longlat_e, -0.09)) %>%
  st_transform(crs = ortho_east)


# Make equator lines
eq_x <- seq(
    lon-90,
    lon+90,
    by = 1)

# Western hemisphere equator
equator_w <- data.frame(
  x = eq_x,
  y = rep(0, length(eq_x)),
  id = "equator") %>% 
  sf::st_as_sf(
    coords = c("x","y"), 
    crs = 4326) %>%  
  group_by(id) %>% 
  summarize(do_union = FALSE) %>% 
  st_cast("LINESTRING") %>% 
  st_transform(ortho_west)

# Eastern hemisphere equator
eq_e <- seq(
    (lon+180)-90,
    (lon+180)+90,
    by = 1)
equator_e <- data.frame(
  x = eq_e,
  y = rep(0, length(eq_e)),
  id = "equator") %>% 
  sf::st_as_sf(
    coords = c("x","y"), 
    crs = 4326) %>%  
  group_by(id) %>% 
  summarize(do_union = FALSE) %>% 
  st_cast("LINESTRING") %>% 
  st_transform(ortho_east)
  

# ggplot() +
#   geom_sf(data = equator_w, linetype = 2, color = "gray50") +
#   geom_sf(data = visible_w)
# ggplot() +
#   geom_sf(data = equator_e, linetype = 2, color = "gray50") +
#   geom_sf(data = visible_e)
```




```{r}
#| label: global-sst-prep
#| eval: true


# 1. Load and format the anomalies for the year:
global_anoms_stack <- stack(
  str_c("/Users/akemberling/Library/CloudStorage/Box-Box/RES_Data/OISST/oisst_mainstays/", "yearly_averages/annual_sst_1982to2024.nc"), 
  varname = "sst_anom")

# 2. Load the annual sst averages file:
global_sst <- stack(
  str_c("/Users/akemberling/Library/CloudStorage/Box-Box/RES_Data/OISST/oisst_mainstays/", "yearly_averages/annual_sst_1982to2024.nc"), 
  varname = "sst")


# Rotate
global_anoms_stack <- raster::rotate(global_anoms_stack$"X2024")
global_sst <- raster::rotate(global_sst$"X2024")

# Change to F
global_sst_f <- raster::calc(global_sst, function(x) as_fahrenheit(x, data_type = "temperature")) %>% 
  setNames(names(global_sst))
global_anoms_f <- calc(global_anoms_stack, function(x) as_fahrenheit(x, data_type = "anomalies")) %>% 
  setNames(names(global_anoms_stack))

# Make temps/anoms stars class to plot with ggplot
global_sst_st <- st_as_stars(global_sst_f$"X2024") %>% setNames("sst")
global_anoms_st <- st_as_stars(global_anoms_f$"X2024") %>% setNames("sst_anom")


#------------  Rates and Ranks  ----------------------

# 3-4. Load the rates/ranks
rates_path <- str_c(oisst_path, "warming_rates/annual_warming_rates1982to2024.nc")
rates_nc <- raster(rates_path, varname= "annual_warming_rate")
ranks_nc <- raster(rates_path, varname = "rate_percentile") 

# # Use non-polar ranks
# nonpolar_ranks_path <- str_c(oisst_path, "warming_rates/OISST-non-polar-annual-warming-percentiles-to-2024.nc")
# ranks_nc <- raster(nonpolar_ranks_path) %>%
#   setNames("rate_percentile")

# Change to F, convert to stars
world_rate_stars <- calc(raster::rotate(rates_nc), function(x) as_fahrenheit(x, data_type = "anomalies")) %>%
  st_as_stars() %>%
  setNames("decadal_rate")

# Ranks
world_ranks_stars <- raster::rotate(ranks_nc) %>%
  st_as_stars()  %>%
  setNames("rank")


```





```{r}
#| label: orthographic-asset-projection
#| eval: true

# Orthographic projection Map


# 2. Warp Grids so we can map it on globe

# Make Projection Grid from Hemisphere Circle in the output crs
# Warp the raster to projection grid(s)
# (don't ask me why I have to do all this)

# Western hemispheres  
global_sst_w <- global_sst_st %>% 
  st_warp(circle_west %>% st_as_stars(), 
          use_gdal = T, 
          no_data_value = 999) %>% 
  setNames("sst")

global_anoms_w <- global_anoms_st %>% 
  st_warp(circle_west %>% st_as_stars(), 
          use_gdal = T, 
          no_data_value = 999) %>% 
  setNames("sst_anom")

rates_w <- world_rate_stars %>% 
  st_warp(circle_west %>% st_as_stars(), 
          use_gdal = T, 
          no_data_value = 999) %>% 
  setNames("rates_f")

ranks_w <- world_ranks_stars %>% 
  st_warp(circle_west %>% st_as_stars(), 
          use_gdal = T, 
          no_data_value = 999) %>% 
  setNames("ranks")



# Eastern hemisphere
global_sst_e <- global_sst_st %>% 
  st_warp(circle_east %>% st_as_stars(), 
          use_gdal = T, 
          no_data_value = 999) %>% 
  setNames("sst")

global_anoms_e <- global_anoms_st %>% 
  st_warp(circle_east %>% st_as_stars(), 
          use_gdal = T, 
          no_data_value = 999) %>% 
  setNames("sst_anom")

rates_e <- world_rate_stars %>% 
  st_warp(circle_east %>% st_as_stars(), 
          use_gdal = T, 
          no_data_value = 999) %>% 
  setNames("rates_f")

ranks_e <- world_ranks_stars %>% 
  st_warp(circle_east %>% st_as_stars(), 
          use_gdal = T, 
          no_data_value = 999) %>% 
  setNames("ranks")




# Put the arrays into a single stars for plotting prep
global_st_w <- c(
  global_sst_w,
  global_anoms_w,
  rates_w,
  ranks_w) 
global_st_e <- c(
  global_sst_e,
  global_anoms_e,
  rates_e,
  ranks_e)
```

### Global SST


```{r}
#| label: fig-global-sst-maps
#| fig-cap: "Map of annual average sea surface temperature for the world’s oceans in 2024."

#----- orthographic sst maps


# Western Hemisphere - SST
west_sst_map <- ggplot() +
  geom_stars(data = global_st_w, aes(fill = sst)) +
  geom_sf(data = circle_west, fill = "transparent", color = "gray10", linewidth = 0.3) +
  geom_sf(
    data = visible_w,
    fill = "white",
    color = "gray30", size = .1) +
  scale_fill_distiller(
    palette = "RdYlBu",
    limits = range(global_sst_st$sst, na.rm = T),
    labels = label_number(suffix = deg_f),
    oob = oob_squish, na.value = "transparent") +
   theme_map() +
   theme(
     legend.title = element_text(face = "bold", family = "Avenir"),
     legend.position = "bottom",
     legend.justification = c(0.5,0),
     plot.background = element_blank()) +
  guides("fill" = guide_colorbar(
    title = "Average SST",
    title.position = "top",
    title.hjust = 0.5,
    barwidth = unit(2.5, "in"),
    frame.colour = "black",
    ticks.colour = "black")) + 
  coord_sf(
    expand = T, 
    crs = ortho_west)
  

# Eastern hemisphere map
east_sst_map <- ggplot() +
  geom_stars(data = global_st_e, aes(fill = sst)) +
  geom_sf(data = circle_east, fill = "transparent", color = "gray10", linewidth = 0.3) +
  geom_sf(
    data = visible_e,
    fill = "white",
    color = "gray30", size = .1) +
  scale_fill_distiller(
    palette = "RdYlBu",
    limits = range(global_sst_st$sst, na.rm = T),
    labels = label_number(suffix = deg_f),
    oob = oob_squish, na.value = "transparent") +
   theme_map() +
   theme(
     legend.title = element_text(face = "bold", family = "Avenir"),
     legend.position = "bottom",
     legend.justification = c(0.5,0),
     plot.background = element_blank()) +
  guides("fill" = guide_colorbar(
    title = "Average SST",
    title.position = "top",
    title.hjust = 0.5,
    barwidth = unit(2.5, "in"),
    frame.colour = "black",
    ticks.colour = "black")) + 
  coord_sf(
    expand = T, 
    crs = ortho_east, clip = "off")  +
  geom_logo(x_npc = 0.8, y_npc = -.175, logo_height = 1, height_units = "cm")

# Combine them
world_sst_map <- (west_sst_map | east_sst_map) +
  plot_layout(guides = "collect") &
  theme(legend.position = "bottom") 
  
  
# 
world_sst_map
```


### Global SST Anomalies

```{r}
#| label: fig-global-anomalies
#| fig-cap: "Map of annual average sea surface temperature anomalies for the world’s oceans in 2024."

#----- anomaly maps

# Do it again for anomalies
# West
west_anom_map <- ggplot() +
  geom_stars(data = global_st_w, aes(fill = sst_anom), alpha = 1) +
  geom_sf(data = equator_w, linetype = 2, color = "gray30", linewidth = 0.25, alpha = 0.5) +
  geom_sf(data = circle_west, fill = "transparent", color = "gray10", linewidth = 0.3) +
  geom_sf(
    data = visible_w,
    fill = "white",
    color = "gray30", size = .1) +
  scale_fill_distiller(
    palette = "RdBu",
    limits = temp_limits,
    labels = temp_labels,
    oob = oob_squish,
    na.value = "transparent") +
  guides("fill" = guide_colorbar(
    title = "SST Anomaly",
    title.position = "top",
    title.hjust = 0.5,
    barwidth = unit(2.5, "in"),
    frame.colour = "black",
    ticks.colour = "black")) + 
  theme_map() +
  theme(
    legend.title = element_text(face = "bold", family = "Avenir"),
    legend.position = "none",
    plot.background = element_blank(),
    plot.title = element_text(
      vjust = 1.5, face = "bold", family = "Avenir"),
    plot.subtitle = element_text(vjust = 1.5, family = "Avenir",
                                 margin = margin(0,0,5,0))) +
  coord_sf(
    expand = T, 
    crs = ortho_west) +
  labs(
    title = "2024: Sea Surface Temperature Anomalies",
    subtitle = "Departure from 1991-2020 Average")

# East
east_anom_map <- ggplot() +
  geom_stars(data = global_st_e, aes(fill = sst_anom), alpha = 1) +
  geom_sf(data = equator_e, linetype = 2, color = "gray30", linewidth = 0.25, alpha = 0.5) +
  geom_sf(data = circle_east, fill = "transparent", color = "gray10", linewidth = 0.3) +
  geom_sf(
    data = visible_e,
    fill = "white",
    color = "gray30", size = .1) +
  scale_fill_distiller(
    palette = "RdBu",
    limits = temp_limits,
    labels = temp_labels,
    oob = oob_squish,
    na.value = "transparent") +
  theme_map() +
   theme(
     legend.title = element_text(face = "bold", family = "Avenir"),
     legend.position = "bottom",
     legend.justification = c(0.5,0),
     plot.background = element_blank()) +
  guides("fill" = guide_colorbar(
    title = "SST Anomaly",
    title.position = "top",
    title.hjust = 0.5,
    barwidth = unit(2.5, "in"),
    frame.colour = "black",
    ticks.colour = "black")) + 
  coord_sf(
    expand = T, 
    crs = ortho_east, 
    clip = "off")  +
  geom_logo(x_npc = 0.8, y_npc = 1.095, logo_height = 1, height_units = "cm")


# Side-by-side
world_anom_map <- (west_anom_map | east_anom_map)  +
  plot_layout(guides = "collect") &
  theme(legend.position = "bottom")
  
world_anom_map

```



### Percentile Warming Ranks


```{r}
#| label: fig-global-ranks
#| fig-height: 7

# World Rank maps

# Make a map of our side of the world
 # Make Projection Grid from Hemisphere Circle in the output crs



# Manually force colors using I()
global_st_w <- global_st_w %>% 
  mutate(
    col = case_when(
      ranks < 0.5  ~ "white",
      ranks < 0.75 ~ "#FEE0D2",
      ranks < 0.85 ~ "#FCBBA1",
      ranks < 0.90 ~ "#FC9272",
      ranks < 0.95 ~ "#FB6A4A",
      ranks < 0.99 ~ "#EF3B2C",
      ranks < 1    ~ "#CB181D"))

# Do East for fun
global_st_e <- global_st_e %>% 
  mutate(
    col = case_when(
      ranks < 0.5  ~ "white",
      ranks < 0.75 ~ "#FEE0D2",
      ranks < 0.85 ~ "#FCBBA1",
      ranks < 0.90 ~ "#FC9272",
      ranks < 0.95 ~ "#FB6A4A",
      ranks < 0.99 ~ "#EF3B2C",
      ranks < 1    ~ "#CB181D"))




# Map the ranks of the western hemisphere
west_ranks_map <- ggplot() +
  geom_sf(data = circle_west, fill = "gray90", color = "gray10", linewidth = 0.3) +
  geom_stars(data = global_st_w,
             aes(fill = I(col)),
             alpha = 0.8) +
  tidyterra::geom_spatraster_contour(
    data = terra::rast(ranks_w), 
    breaks = c(0.99, 1),
    color = "black",
    maxcell = Inf) +
  geom_sf(data = equator_w, linetype = 2, color = "gray30", linewidth = 0.25, alpha = 0.5) +
  geom_sf(
    data = visible_w,
    fill = "white",
    color = "gray30", size = .1) +
  geom_sf(data = circle_west, fill = "transparent", color = "gray10", linewidth = 0.3) +
  theme_map() +
  theme(
     legend.position = "none",
     plot.background = element_blank(),
     plot.title = element_text(
      vjust = 1.5, face = "bold", family = "Avenir"),
    plot.subtitle = element_text(vjust = 1.5, family = "Avenir",
                                 margin = margin(0,0,5,0))) +
  coord_sf(
    expand = T, 
    crs = ortho_west) +
  labs(
    title = "Sea Surface Temperature Warming (1982-2024)",
    subtitle = "Represented as a percentile (*Areas impacted by sea ice coverage removed)")



# Eastern Hemisphere
east_ranks_map <- ggplot() +
  geom_sf(data = circle_east, fill = "gray90", color = "gray10", linewidth = 0.3) +
  geom_stars(data = global_st_e,
             aes(fill = I(col)),
             alpha = 0.8) +
  tidyterra::geom_spatraster_contour(
    data = terra::rast(ranks_e),
    breaks = c(0.99, 1),
    color = "black",
    maxcell = Inf) +
  geom_sf(data = equator_e, linetype = 2, color = "gray30", linewidth = 0.25, alpha = 0.5) +
  geom_sf(
    data = visible_e,
    fill = "white",
    color = "gray30", size = .1) +
  geom_sf(data = circle_east, fill = "transparent", color = "gray10", linewidth = 0.3) +
  theme_map() +
   theme(
     legend.position = "none",
     plot.background = element_blank()) +
  coord_sf(
    expand = T, 
    crs = ortho_east, 
    clip = "off")  +
  geom_logo(x_npc = 0.8, y_npc = 1.095, logo_height = 1, height_units = "cm")


# Make the stupid legend using GGPLOT2
# Make the stupid legend
fil_rects <- tribble(
  ~"fill",  ~"llim",  ~"rlim",
  "white",   0,         0.5, 
  "#FEE0D2", 0.5,       0.75, 
  "#FCBBA1", 0.75,      0.85, 
  "#FC9272", 0.85,      0.9, 
  "#FB6A4A", 0.9,       0.95, 
  "#EF3B2C", 0.95,      0.99, 
  "#CB181D", 0.99,       1.0)

fil_labs <- data.frame(
  x = c(0, 0.5, 0.75, 0.85, 0.9, 0.95, 0.99),
  y = 1.05) %>% 
  mutate(labs = str_c(x*100, "%"))

dumb_legend <- ggplot() +
  geom_rect(
    data = fil_rects, aes(xmin = llim, xmax = rlim, ymin = 0.5, ymax = 1, fill = I(fill)),
    color = "white", linewidth = 0.5) +
  geom_rect(
    data = fil_rects, aes(xmin = .99, xmax = 1, ymin = 0.5, ymax = 1, fill = I(fill)),
    color = "black", linewidth = 0.5) +
  geom_rect(aes(xmin = 0, xmax = 1, ymin = 0.5, ymax = 1), color = "gray20", fill = "transparent") +
  geom_text(data = fil_labs, aes(x, y, label = labs), family = "Avenir", size = 2.5) +
  theme_void() +
  coord_cartesian(clip = "off") +
  labs(x = NULL, y = NULL)


# Assemble!
ranks_map <- (west_ranks_map | east_ranks_map) / dumb_legend +
  plot_layout(heights = c(5,1))

ranks_map
  

```




## Expert Insights and Emerging Questions

Oceanic conditions in the Gulf of Maine are known to be influenced by shifts in the position and flow of major ocean currents systems. Elevated sea surface temperatures of the past decade are believed to be in-part a product of an increased influence from the Gulf Stream, the major warm-water current flowing North-West off the east coast of the US. 

Northward shifts in this current influences Gulf of Maine conditions by increasing warm-water inflow into the region directly and by obstructing the flow of cold water flowing South from Nova Scotia and the Labrador Current.

The push-and-pull between the two water masses, and ultimately the relative inflow from each source, can produce large swings in temperature, salinity, nutrient/mineral concentrations, and stratification patterns for the region.



##  Gulf of Maine Bottom Temperatures

Scientists following bottom temperature changes in the region have raised the notion that changes to bottom temperature may be a useful early-warning system for changes in the relative influence of major ocean currents.

Bottom temperatures are less directly impacted by local weather systems and can in some applications provide a more clear view interactions between different water masses.



### Bottom Temperatures from Buoys

```{r}
# Package to interface with erddap
library(rerddap)

## NOAA IOOS NERACOOS - old URL
url <- "http://www.neracoos.org/erddap/"


# Buoy M - 50meter, from data.neracoos.org - new URL (in development)
# Catalog: https://data.neracoos.org/erddap/tabledap/index.html?page=1&itemsPerPage=1000
buoy_m_250m <- tabledap(
 x = "M01_ocean_250m", 
  url = url, 
  fields = c("station", "time", "longitude", "latitude", "depth", "temperature"))

buoy_m_250m <- as_tibble(buoy_m_250m) %>% 
  mutate(time = as.Date(time),
         yr = year(time),
         mnth = month(time),
         temperature = as.numeric(as.character(temperature))) %>% 
  filter(time < "2024-11-18")

# Plot daily
buoy_date_range <- c(min(buoy_m_250m$time), max(buoy_m_250m$time))
all_buoy_dates <- data.frame("time" = seq.Date(from = buoy_date_range[1], to = buoy_date_range[2], by = 1))

# Fill Gaps
all_buoy_dates %>% 
  left_join(buoy_m_250m) %>% 
  ggplot() +
  geom_line(aes(time, temperature, group = 1)) +
  labs(title = "Guess When Buoy M was Shipstruck")

# all_buoy_dates %>% 
#   left_join(buoy_m_250m) %>% 
#   write_csv(file = here::here("local_data/buoy_m_250m.csv"))

# Monthly averages and climatology
bm_month_clim <-  buoy_m_250m  %>% 
  group_by(station, depth, mnth) %>% 
  summarise(
    mean_temp = mean(temperature, na.rm = T),
    .groups = "drop")

bm_monthly <- buoy_m_250m  %>% 
  group_by(station, depth, yr, mnth) %>% 
  summarise(
    temperature = mean(temperature, na.rm = T),
    .groups = "drop") %>% 
  mutate(
    time  = as.Date(
      str_c(yr, str_pad(mnth, pad = "0", side = "left", width = 2), 
            "01", sep = "-"))) %>% 
  left_join(bm_month_clim) %>% 
  mutate(temp_anom = temperature - mean_temp,
         is_pos = if_else(temp_anom < 0, F, T))



# Plot monthly
bm_monthly %>% 
  mutate(anom_col = if_else(is_pos, "#B2182B", "#2166AC")) %>% 
  ggplot() +
  geom_col(aes(time, temp_anom, color  = I(anom_col), fill = I(anom_col)))
```



### Bottom Temperature Reanalysis

Bottom temperatures are not as easily observed or directly measurable, and for tracking broad-scale changes researches rely on modeled data known as ocean reanalyses. 



```{r}
#| label: Glorys gulf of maine bt timeseries
#| eval: true 
#| fig-height: 5

# load timeseries for Gulf of Maine
glorys_path <- cs_path("res", "GLORYs")
glorys_ts <- read_csv(str_c(glorys_path, "GOM_timeseries/Glorys_surfacebottom_GOM_ts.csv"))


# Prepare MHW and climatology assesment for surface and bottom temperatures
glorys_bot_mhw <- pull_heatwave_events(
  temperature_timeseries = as.data.frame(glorys_ts), 
  threshold = 90, 
  clim_ref_period = c("1993-01-01", "2022-12-31"), 
  temp_col = "bottom_temp",
  date_col = "time") %>% 
  supplement_hw_data() %>% 
  filter(doy != 366) %>% 
  rename(bt_anom = sst_anom,
         bt = sst,
         bt_f = sst_f) %>% 
  mutate(var = "Surface Temperature")




# Bottom Temperature Anomalies
glorys_bot_mhw %>% 
  mutate(
    cs_thresh_f = as_fahrenheit(mcs_thresh),
    mhw_event_txt = if_else(mhw_event, "Marine Heatwave", "Non-Heatwave")) %>% 
  #filter(time > as.Date("2008-01-01")) %>% 
  ggplot() +
  geom_ribbon(
    aes(time, ymin = cs_thresh_f, ymax = mhw_thresh_f),
    fill = "lightgray", alpha = 0.4) +     
  scale_color_manual(values = color_vals) +
  scale_y_continuous(
    labels =  number_format(suffix = temp_ops$temp_suff),
    expand = expansion(mult = c(0.05, .2))) +   
  scale_x_date(expand = expansion(add = c(0,0))) +
  geom_path(aes(x = time, y = bt_f, color = mhw_event_txt, group = 1), 
            linewidth = 0.8, key_glyph = "timeseries") +
  theme(legend.position = "bottom", legend.title.position = "top") +
  labs(title = "Gulf of Maine Bottom Temperature",
       x = "Date",
       y = "Bottom Temperature Anomalies",
       color = "Bottom Temperature Anomalies and Heatwave Status",
       caption = "Bottom Temperature from GLORYS Ocean Reanalysis by Copernicus Marine Service")


```


```{r}
#| label: Glorys gulf of maine bt anom timeseries
#| eval: true 
#| fig-height: 5

# Prepare MHW and climatology assesment for surface and bottom temperatures
glorys_bot_mhw <- pull_heatwave_events(
  temperature_timeseries = as.data.frame(glorys_ts), 
  threshold = 90, 
  clim_ref_period = c("1993-01-01", "2022-12-31"), 
  temp_col = "bottom_temp",
  date_col = "time") %>% 
  supplement_hw_data() %>% 
  filter(doy != 366) %>% 
  rename(bt_anom = sst_anom,
         bt = sst) %>% 
  mutate(var = "Surface Temperature")

# # Flag heatwave Events:
# glorys_hw_events <- glorys_bot_mhw  %>% 
#   filter(mhw_event == T) %>% 
#   group_split(mhw_event_no) %>% 
#   map_dfr(function(x){
#     data.frame(
#       id = unique(x$mhw_event_no),
#       llim = min(x$time),
#       rlim = max(x$time),
#       ymax = max(x$sst_f),
#       min_anom = min(x$anom_f),
#       max_anom = max(x$anom_f),
#       mean_anom = mean(x$anom_f),
#       len  = nrow(x))
#   })


# Bottom Temperature Anomalies
glorys_bot_mhw %>% 
  mutate(
    cs_thresh_f = as_fahrenheit(mcs_thresh),
    mhw_event_txt = if_else(mhw_event, "Marine Heatwave", "Non-Heatwave")) %>% 
  # filter(time > as.Date("2000-01-01")) %>% 
  ggplot() +
  geom_ribbon(
    aes(time, ymin = cs_thresh_f-seas_f, ymax = mhw_thresh_f-seas_f),
    fill = "lightgray", alpha = 0.4) +     
  geom_textpath(
      aes(x = time, y = 0), 
      color = "gray10", 
      label = "Climatological Avg. +/-\n10th-90th Percentile Range", 
      hjust = 0.85, lty = 1, family = "Avenir", vjust = 1.2, size = 5) +
  # geom_bracket(
  #     data = glorys_hw_events,
  #     aes(xmin = llim, xmax = rlim, y.position = max_anom + 1, label = str_c(len, " Days")),
  #     family = "Avenir") +
  scale_color_manual(values = color_vals) +
  scale_y_continuous(
    labels =  number_format(suffix = temp_ops$temp_suff),
    expand = expansion(mult = c(0.05, .2))) +   
  scale_x_date(expand = expansion(add = c(0,0))) +
  geom_path(aes(x = time, y = anom_f, color = mhw_event_txt, group = 1), 
            linewidth = 0.8, key_glyph = "timeseries") +
  theme(legend.position = "bottom", legend.title.position = "top") +
  labs(title = "Gulf of Maine Bottom Temperature Anomalies",
       x = "Date",
       y = "Bottom Temperature Anomalies",
       color = "Bottom Temperature Anomalies and Heatwave Status",
       caption = "Bottom Temperature from GLORYS Ocean Reanalysis by Copernicus Marine Service")
```


### Regional Bottom Temperature Maps

From an overhead perspective, sea bottom temperatures shifted to cooler temperatures during the Fall of 2023. Bottom temperature anomalies reveal that below average temperatures were concentrated along the shelf break and the Northeast Channel, and extended as far south as off the coast of Maryland.

```{r}
#| label: glorys map data
#| eval: true


# Path to monthly averages
glorys_path <- cs_path("res", "GLORYs/NE_Shelf_TempSal_Monthly")
glorys_bt <- raster::stack(
  str_c(glorys_path, "Northwest_Atlantic_Surface_Bottom_93to2022_anoms.nc"),
  varname = "bottom_temp")
glorys_bta <- raster::stack(
  str_c(glorys_path, "Northwest_Atlantic_Surface_Bottom_93to2022_anoms.nc"),
  varname = "bottom_temp_anom")


# Assign time metadata
time_steps <- as.Date(str_replace_all(str_remove(names(glorys_bt), "X"), "[.]", "-"))
glorys_bt <- setZ(glorys_bt, time_steps, "time")
glorys_bta <- setZ(glorys_bta, time_steps, "time")


# Make it a stars class to plot with ggplot
is_2023_idx <- which(str_detect(names(glorys_bt), "2023"))
is_2024_idx <- which(str_detect(names(glorys_bt), "2024"))
bt_anoms_24 <- glorys_bta[[is_2024_idx]]
bt_anoms_23 <- glorys_bta[[is_2023_idx]]
bt_23 <- glorys_bt[[is_2023_idx]]
bt_24 <- glorys_bt[[is_2024_idx]] 

q_labs <- c("January - March", "April - June", "July - September", "October - December")
bt_anom_quarters_23 <- stack(list(
  "January_March"    = mean(bt_anoms_23[[1:3]], na.rm = T),
  "April_June"       = mean(bt_anoms_23[[4:6]], na.rm = T),
  "July_September"   = mean(bt_anoms_23[[7:9]], na.rm = T),
  "October_December" = mean(bt_anoms_23[[10:12]], na.rm = T)))  %>% 
  st_as_stars() %>% 
  st_set_dimensions(
    3, 
    values = q_labs, 
    names = "quarter")
bt_anom_quarters_24 <- stack(list(
  "January_March"    = mean(bt_anoms_24[[1:3]], na.rm = T),
  "April_June"       = mean(bt_anoms_24[[4:6]], na.rm = T),
  "July_September"   = mean(bt_anoms_24[[7:9]], na.rm = T),
  "October_December" = mean(bt_anoms_24[[10:12]], na.rm = T))) %>% 
  st_as_stars() %>% 
  st_set_dimensions(
    3, 
    values = q_labs, 
    names = "quarter")
```


```{r}
#| label: map 2023 bt anoms
#| fig.width: 8
#| fig.height: 6

# Color limit for palettes
temp_limits <- c(-4, 4)
temp_breaks <- c(temp_limits[1], temp_limits[1]/2,  0, temp_limits[2]/2, temp_limits[2])
temp_labels <- str_c(c(str_c("< ", temp_limits[1]), temp_limits[1]/2, 0, temp_limits[2]/2, str_c("> ", temp_limits[2])), "\u00b0C")



#### 2. Map the anomalies

# 2023:
ggplot() +
  geom_stars(data = bt_anom_quarters_23) +
  facet_wrap(~quarter) +
  geom_sf(data = new_england, fill = "gray90", linewidth = .15) +
  geom_sf(data = canada, fill = "gray90", linewidth = .15) +
  geom_sf(data = region_extent,
          color = "black",
          linetype = 2, linewidth = 1,
          fill = "transparent") +
  scale_y_continuous(breaks = seq(30, 50, by = 2)) +
  scale_fill_distiller(
    palette = "RdBu",
    na.value = "transparent",
    limit = temp_limits,
    labels = temp_labels,
    oob = scales::oob_squish) +
  coord_sf(xlim = c(-78, -56.5), ylim = c(37.8, 48)) +
  labs(title = str_c("2023: Average Temperature Anomalies"),
       caption = "Anomalies calculated using 1991-2020 climatology.\n100m & 200m contours overlaid to show bathymetric details.") +
  map_theme(
    legend.position = "bottom",
    legend.title = element_text(angle = 0, face = "bold", family = "Avenir"))+
  guides("fill" = guide_colorbar(
    title = "Bottom Temperature Anomalies",
    title.position = "top",
    title.hjust = 0.5,
    barwidth = unit(3, "in"),
    frame.colour = "black",
    ticks.colour = "black"))
```


Sea bottom temperature anomalies during 2024 reveal that the below-average temperatures became more widespread, with above average sea bottom temperatures concentrated along more near-shore areas. 

```{r}
#| label: map 2024 bt anoms
#| fig.width: 8
#| fig.height: 6


# 2024
ggplot() +
  geom_stars(data = bt_anom_quarters_24) +
  facet_wrap(~quarter) +
  geom_sf(data = new_england, fill = "gray90", linewidth = .15) +
  geom_sf(data = canada, fill = "gray90", linewidth = .15) +
  geom_sf(data = region_extent,
          color = "black",
          linetype = 2, linewidth = 1,
          fill = "transparent") +
  scale_y_continuous(breaks = seq(30, 50, by = 2)) +
  scale_fill_distiller(
    palette = "RdBu",
    na.value = "transparent",
    limit = temp_limits,
    labels = temp_labels,
    oob = scales::oob_squish) +
  coord_sf(xlim = c(-78, -56.5), ylim = c(37.8, 48)) +
  labs(title = str_c(report_yr, ": Average Temperature Anomalies"),
       caption = "Anomalies calculated using 1991-2020 climatology.\n100m & 200m contours overlaid to show bathymetric details.") +
  map_theme(
    legend.position = "bottom",
    legend.title = element_text(angle = 0, face = "bold", family = "Avenir"))+
  guides("fill" = guide_colorbar(
    title = "Bottom Temperature Anomalies",
    title.position = "top",
    title.hjust = 0.5,
    barwidth = unit(3, "in"),
    frame.colour = "black",
    ticks.colour = "black"))



```

The difference in bottom temperatures between these two years shows us that sea bottom temperatures fell broadly, and for many areas this difference was several degrees (C).

```{r}
#| label: map the 2023-2024 bt difference
#| fig.width: 8
#| fig.height: 6


bt_23_quarters <- stack(list(
  "January_March"    = mean(bt_23[[1:3]], na.rm = T),
  "April_June"       = mean(bt_23[[4:6]], na.rm = T),
  "July_September"   = mean(bt_23[[7:9]], na.rm = T),
  "October_December" = mean(bt_23[[10:12]], na.rm = T)
))
bt_24_quarters <- stack(list(
  "January_March"    = mean(bt_24[[1:3]], na.rm = T),
  "April_June"       = mean(bt_24[[4:6]], na.rm = T),
  "July_September"   = mean(bt_24[[7:9]], na.rm = T),
  "October_December" = mean(bt_24[[10:12]], na.rm = T)
))


bt_diff <- map2(unstack(bt_24_quarters), unstack(bt_23_quarters), function(x,y){x-y}) %>% 
  stack() %>% 
  st_as_stars() %>% 
  st_set_dimensions(
    3, 
    values = q_labs, 
    names = "quarter")


# Temperature Difference
ggplot() +
  geom_stars(data = bt_diff) +
  facet_wrap(~quarter) +
  geom_sf(data = new_england, fill = "gray90", linewidth = .15) +
  geom_sf(data = canada, fill = "gray90", linewidth = .15) +
  geom_sf(data = region_extent,
          color = "black",
          linetype = 2, linewidth = 0.5,
          fill = "transparent") +
  scale_y_continuous(breaks = seq(30, 50, by = 2)) +
  scale_fill_distiller(
    palette = "RdBu", 
    na.value = "transparent", 
    limit = temp_limits, 
    labels = temp_labels,
    oob = scales::oob_squish) +
  coord_sf(xlim = c(-78, -56.5), ylim = c(37.8, 48)) +
  map_theme(
    legend.position = "bottom",
    legend.title = element_text(angle = 0, face = "bold", family = "Avenir"))+
  guides("fill" = guide_colorbar(
    title = "Bottom Temperature Difference",
    title.position = "top",
    title.hjust = 0.5,
    barwidth = unit(3, "in"),
    frame.colour = "black",
    ticks.colour = "black"))  +
  labs(title = str_c("Difference in Quarterly Bottom Temperatures"),
       subtitle = "Shift from 2023-2024",
       caption = "")

```



### Gulf Stream Positioning


```{r}
# Sort out where things live
# # remotes::install_github("BigelowLab/gstream")
# library(gstream)
# 
# path = gstream_path()
# path
# 
# basename()
# gs_pos <- read_usn(what = "ordered")
# gstream::

navy_gsi <- list.files("~/Documents/Repositories/gstream_data/usn/ordered", full.names = T) %>% 
  map_dfr(read_sf)
  
navy_gsi %>% 
  mutate(yr = year(date),
         is_22 = if_else(yr == 2022, T, F),
         is_23 = if_else(yr == 2023, T, F),
         is_24 = if_else(yr == 2024, T, F),
         flag_col = case_when(
           is_24 ~ gmri_cols("gmri blue"),
           is_23 ~ gmri_cols("lv orange"),
           TRUE ~ "gray50"),
         flag_alpha = case_when(
           is_24 ~ 0.8,
           is_23 ~ 0.8,
           TRUE ~ 0.5)) %>% 
  filter(wall == "north") %>% 
  ggplot() +
  geom_sf(data = new_england) +
  geom_sf(data = canada) +
  geom_sf(aes(color = I(flag_col), alpha = I(flag_alpha))) +
  coord_sf(xlim = c(-79, -56.5), ylim = c(35, 48)) +
  labs(title = "Gulf Stream North Wall Position")
```

```{r}
#| label: monthly gulf stream postions
#| eval: false

nwall <- navy_gsi %>% 
  mutate(yr = year(date),
         mnt = month(date)) %>% 
  filter(wall == "north")


# Define the number of points for interpolation (e.g., 100 points per line)
n_points <- 150

# Function to resample a line to `n_points` evenly spaced points
resample_line <- function(line, n_points, projected_crs = 32619) {
  coords       <- st_coordinates(st_transform(line, st_crs(projected_crs)))
  interpolated <- approx(coords[,1], coords[,2], n = n_points)
  st_linestring(cbind(interpolated$x, interpolated$y)) %>% 
    st_sfc()
}


# Interpolate each daily line into `n_points`
# Group  by point id
resampled_points <- nwall %>%
  split(.$date) %>% 
  map_dfr(~resample_line(.x, n_points = n_points) %>% 
        st_as_sf(crs = projected_crs) %>% 
        rename(geometry = x) %>% 
        st_cast("POINT") %>%
        mutate(point_id = row_number()), # ID for each resampled point
      .id = "date")  %>% 
  mutate(yr = year(date),
         mnth = month(date))

# Compute the average lat/lon for each point position across all days in a month
average_points <- resampled_points %>%
  st_coordinates() %>%
  as.data.frame() %>%
  bind_cols(resampled_points) %>%
  group_by(yr, mnth, point_id) %>%
  summarize(
    avg_X = mean(X, na.rm = TRUE),
    avg_Y = mean(Y, na.rm = TRUE),
    .groups = "drop"
  )

# Create sf object of averaged points
monthly_avg_points <- st_as_sf(
  average_points,
  coords = c("avg_X", "avg_Y"),
  crs = st_crs(projected_crs)
) %>% st_transform(crs=st_crs(4326))

# Reconstruct average lines for each month
monthly_avg_lines <- monthly_avg_points %>%
  group_by(yr, mnth) %>%
  summarize(do_union = FALSE) %>%
  st_cast("LINESTRING") %>% 
  mutate(date = as.Date(
    str_c(yr, 
          str_pad(mnth, "left", pad = "0", width = 2),
          "02", 
          sep = "-")))

# Was that worth the effort... no
monthly_avg_lines %>% 
  filter(yr >= 2023) %>% 
  ggplot() +
  geom_sf(data = new_england) +
  geom_sf(data = canada) +
  geom_sf(aes(color = factor(yr)), alpha = 0.8, linewidth = 0.8) +
  coord_sf(xlim = c(-78, -56.5), ylim = c(35.8, 48))



```





## The Importance of the Gulf of Maine Region



For analyses like these that characterize environmental conditions for a particular area—in this case, the Gulf of Maine—it is important to be clear about the spatial extent that defines the region of study; different domain boundaries could produce different results. The spatial area we use to define the “Gulf of Maine” is displayed in @fig-map, and has remained consistent throughout our seasonal and annual warming updates. 




```{r}
#| label: fig-map
#| fig.width: 8
#| fig.height: 6
#| fig.cap: "Spatial domain used for Gulf of Maine SST analyses. Dashed line denotes the region of study for this analysis. Depth contours are colored at 100m intervals to a maximum of 600m, deeper blues indicate deeper water depths."
#| fig.alt: "An overhead view of the Gulf of Maine region. Landmasses and political boundaries for the United States and Canada are displayed. A blue dotted line outlining a box with a transparent blue fill is shown to demark where satellite data for the analysis has been used."
#| 

# Load the bounding box for Andy's GOM to show they align
region_extent <- st_read(poly_path, quiet = TRUE)



# Map the Gulf of Maine with Bathymetry
gom_extent_p <- map_study_area_color(
  region_extent  = region_extent,
  new_england_sf = new_england,
  canada_sf      = canada,
  greenland_sf   = greenland) +
  labs(title     = "Gulf of Maine Study Area")


# Show figure
gom_extent_p
```

 

---

**A Note on Data Sources**    

The figures in this report are created using remotely-sensed satellite data as part of publicly funded research efforts. Satellite SST data was obtained from NOAA’s National Center for Environmental Information (NCEI), with all maps and figures displaying NOAA’s Optimum Interpolation Sea Surface Temperature Data.


 * NOAA High Resolution SST data provided by the NOAA/OAR/ESRL PSL, Boulder, Colorado, USA, from their Web site at https://psl.noaa.gov/data/gridded/data.noaa.oisst.v2.highres.html.    

**Recommended Citation:**    

> Gulf of Maine Research Institute. 2024. Gulf of Maine Warming Update: 2024. https://gmri.org/stories/warming-22





---




```{r}
#| label: figure-saving
#| results: hide


####  Saving Figures  ####
if(params$save_figures){
  
  
  # Prevents tiny fonts when saving
  showtext::showtext_opts(dpi=300) 
  
  
  
  # Gom Extent Map
  ggsave(
    plot = gom_extent_p, 
    filename = str_c(save_location, "GOM_Extent.png"), 
    height = unit(4, "in"),
    width = unit(4, "in"),
    dpi = "retina", 
    bg = "transparent", 
    scale = 2)
  
  
  # Gom VS Global - annual trends
  ggsave(
    plot = temp_simplified, 
    filename = str_c(save_location, "gom_and_global_trends_annual.jpeg"),
    height = unit(2.5, "in"),
    width = unit(4, "in"),
    dpi = "retina", 
    bg = "white", 
    scale = 2)
  
  # Northeast Record Temperatures
  ggsave(
    plot = north_atl_plot, 
    filename = str_c(save_location, "north_atlantic_record_temps.jpeg"),
    height = unit(2.5, "in"),
    width = unit(4, "in"),
    dpi = "retina", 
    bg = "white", 
    scale = 2)
  
  # Ranking of warmest years
  ggsave(
    plot = temp_rankings_p, 
    filename = str_c(save_location, "Annual_temp_ranks_plot.png"),
    height = unit(2.5, "in"),
    width = unit(4, "in"),
    dpi = "retina", 
    bg = "white", 
    scale = 2)
  
  
  
  # Record daily temperatures plot
  ggsave(
    plot = gom_23_record_ts,
    filename = str_c(save_location, report_yr, "_gom_records_temps.jpeg"),
    height = unit(2.5, "in"),
    width = unit(4, "in"),
    dpi = "retina",
    bg = "white", 
    scale = 2)
  
  # Below Average Days
  ggsave(
    plot = cold_days_plot,
    filename = str_c(save_location, report_yr, "_gom_cold_temps.jpeg"),
    height = unit(2.5, "in"),
    width = unit(4, "in"),
    dpi = "retina",
    bg = "white", 
    scale = 2)
  
  
  # Percentage of months that set record temperatures bars
  ggsave(
    plot = fig_percents,
    filename = str_c(save_location, report_yr, "_percent_record_bars.jpeg"),
    height = unit(2.5, "in"),
    width = unit(4, "in"),
    dpi = "retina", 
    bg = "white", 
    scale = 2)
  
  
  
  # Full Year Temperature Timeseries
  ggsave(
    plot = hw_temp_p, 
    filename = str_c(save_location, "oisst_lastyr_temps.jpeg"),
    height = unit(2.5, "in"),
    width = unit(4, "in"),
    dpi = "retina", 
    bg = "white", 
    scale = 2)
  
  
  
  # Heatwave status heatmap
  ggsave(
    plot = heatmap_p, 
    filename = str_c(save_location, "oisst_gom_heatmap.jpeg"),
    height = unit(4, "in"),
    width = unit(4, "in"),
    dpi = "retina", 
    bg = "white", 
    scale = 2)
  

  
  # Gulf of Maine Daily Anomalies
   ggsave(
    plot = hw_anom_p, 
    filename = str_c(save_location, "gom_daily_sst_anomalies_ts.jpeg"),
    height = unit(2.5, "in"),
    width = unit(4, "in"),
    dpi = "retina", 
    bg = "white", 
    scale = 2)
  
  
  # GOM vs Global - quarterly trends
  ggsave(
    plot = panel_plot, 
    filename = str_c(save_location, "gom_and_global_trends_seasonal.jpeg"),
    height = unit(4, "in"),
    width = unit(5, "in"),
    dpi = "retina", 
    bg = "white", 
    scale = 2)
  
  
  
  # Annual Temperature Anomalies Map(s)
  ggsave(
    plot = (annual_gom_map + labs(caption = NULL)), 
    filename = str_c(save_location, "gom_annual_anom_map.jpeg"),
    height = unit(2.5, "in"),
    width = unit(4, "in"),
    dpi = "retina", 
    bg = "white", 
    scale = 2)
  
  # seasonal Temperature Anomalies Map(s)
  ggsave(
    plot = season_panels_all, 
    filename = str_c(save_location, "gom_seasonal_anom_map.jpeg"),
    height = unit(2.5, "in"),
    width = unit(4, "in"),
    dpi = "retina", 
    bg = "white", 
    scale = 2)
  
  
  
  
  
  # Global Anomaly Map
  ggsave(
    plot = world_anom_map,
    filename = str_c(save_location, "global_annual_anom_map.jpeg"),
    height = unit(2.5, "in"),
    width = unit(4, "in"),
    dpi = "retina", 
    bg = "white", 
    scale = 2)
  
  
   # Global Ranks Map
  ggsave(
    plot = ranks_map,
    filename = str_c(save_location, "global_warming_ranks_map.jpeg"),
    height = unit(2.5, "in"),
    width = unit(4, "in"),
    dpi = "retina", 
    bg = "white", 
    scale = 2)
  

   # Hurricane Lee Map
  ggsave(
    plot = lee_map, 
    filename = str_c(save_location, "lee_traversal_map.jpeg"),
    height = unit(4, "in"),
    width = unit(4, "in"),
    dpi = "retina",
    bg = "white", 
    scale = 2)



  # Monthly Average Table
  # Weekly Report Table
  gtsave(data = month_summ_table %>% 
    opt_table_font(
      font = list(google_font(name = "Avenir"))), 
    filename = str_c(save_location, "monthly_summary_table.png"))
  
}



  
```






```{r}
#| label: additional-figures-for-large-print
#| eval: false

# # Load ragg for re-scaling
# library(ragg)
# 
# 
# 
# # make a lcal save path
# new_save <- here::here("local_data", report_yr)
# 
# # Re-size them for large plotting
# # temp_simplified: 6x8
# # panel plot: 8x10
# 
# 
# 
# #-------JPEG
# 
# # Gom VS Global - annual
# ragg::agg_jpeg(filename = str_c(new_save, "gom_and_global_trends_annual.jpeg"), 
#               height = 18, 
#               width = 24, 
#               units = "in",
#               res = 320, 
#               scaling = 2)
# plot(temp_simplified)
# invisible(dev.off())
# 
# 
# # GOM vs Global - Seasons
# ragg::agg_jpeg(filename = str_c(new_save, "gom_and_global_trends_seasonal.jpeg"), 
#               height = 24, 
#               width = 30, 
#               units = "in",
#               res = 320, 
#               scaling = 3)
# plot(panel_plot)
# grid::grid.raster(lab_logo, x = 0.08, y = 0.01, just = c('left', 'bottom'), height = unit(1, "cm"))
# invisible(dev.off())


```



```{r}
#| results: asis
insert_gmri_footer()
```

