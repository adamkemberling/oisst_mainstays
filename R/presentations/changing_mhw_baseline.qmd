---
title: "Shifting Baselines"
subtitle: "Gulf of Maine Marine Heatwaves"
title-slide-attributes:
    data-background-image: img/GMRI_template_slide1.png
    data-background-size: contain
    data-background-opacity: "0.35"
format: 
  revealjs:
    slide-number: true
    logo: img/gmri_logo.png
    self-contained: false
editor: visual
execute: 
  echo: false
  warning: false
  message: false
  comment: ""
  fig.align: center
---

## Communication of "Extreme Events" & a Changing Climate.

The impacts of changing the **reference period** and/or **de-trending** on how we categorize "extreme events".

```{r}
#| label: setup

library(heatwaveR)
library(tidyverse)
library(geomtextpath)
library(scales)
library(lubridate)
library(patchwork)
library(gmRi)
conflicted::conflict_prefer("select", "dplyr")
conflicted::conflict_prefer("filter", "dplyr")
conflicted::conflict_prefer("lag", "dplyr")
#theme_set(theme_gmri())
```

## Defining Marine Heatwave Events (MHW)

Marine heatwaves have traditionally defined using the Hobday et al. definition:

> A marine heatwave is defined a when seawater temperatures exceed a seasonally-varying threshold (usually the 90th percentile) for at least 5 consecutive days. Successive heatwaves with gaps of 2 days or less are considered part of the same event.

## Setting MHW Thresholds

**Using this definition:**

> MHW events result when a daily SST measurement falls beyond some threshold. This threshold is set using some **climate baseline**.

The standard baseline we have used is 30-years: **1982-2011.**

```{r}
#| label: load-data
#| echo: false

# Support Functions
source(here::here("R/oisst_support_funs.R"), verbose = FALSE)
source(here::here("R/temp_report_support.R"), verbose = FALSE)

# Load the SST

# # Debugging data duplication:
# gom_sst <- read_csv(here::here("notebooks/testing_data/gom_oisst.csv"))
# 



# Normal workflow:
gom_sst <- oisst_access_timeseries(region_family = "gmri focus areas",
                                   poly_name = "apershing gulf of maine",
                                   box_location = "cloudstorage")

# Format
gom_sst <- gom_sst %>% 
  mutate(
    time = as.Date(time),
    area_wtd_f = as_fahrenheit(area_wtd_sst),
    anom_f     = as_fahrenheit(area_wtd_anom, "anomalies")) %>% 
  #distinct(time, .keep_all = T) %>% 
  supplement_season_info() %>% 
  filter(year %in% c(1982:2022))

```

## Distribution of the Data:

```{r}
#| label: june1-setup
#| fig.align: center

# Pull June 1st's
j1 <- gom_sst %>% filter(month(time) == 6, mday(time) == 1)

# Pull reference period
j1_ref <- j1 %>% filter(between(year(time), 1982, 2011))

# Get mean/sd
mean_temp <- mean(j1_ref$area_wtd_sst)
temp_sd <- sd(j1_ref$area_wtd_sst)

# Plot
ggplot(j1_ref, aes(x = area_wtd_sst)) + 
  stat_function(
    fun = dnorm, 
    n = nrow(j1_ref), 
    args = list(mean = mean_temp, 
                sd = temp_sd), 
    linewidth = 1) +
  geom_dotplot(fill = "lightblue", binwidth = 0.15) + 
  scale_y_continuous(limits = c(0, 0.5), expand = expansion(add = c(0,0))) +
  scale_x_continuous(labels = number_format(suffix = "\u00b0C"),
                     limits = c(6.5,13),
                     expand = expansion(add = c(.5,.5))) +
  theme(axis.text.y = element_blank(),
        axis.ticks.y = element_blank()) +
  labs(x = "Sea Surface Temperature", 
       y = "Count", 
       title = "June 1st Temperature Distribution",
       color = "",
       subtitle = "Gulf of Maine, 1982-2011 Reference Period") 
```

## Thresholds from the Distribution:

```{r}
#| label: daily-thresholds


# Get hw/cs thresholds
thresh <- qnorm(mean = mean_temp, sd = temp_sd, p = c(0.1, 0.9))


# Add them to plot
ggplot(j1_ref, aes(x = area_wtd_sst)) + 
  geom_rect(
    data = data.frame(xmin = -Inf, xmax = thresh[[1]], ymin = -Inf, ymax = Inf),
    aes(
      x = NULL,
      xmin = xmin, 
      xmax = xmax, 
      ymin = ymin, 
      ymax = ymax),
    fill = "lightblue", 
    alpha = 0.3) +
  geom_rect(
    data = data.frame(xmin = thresh[[2]], xmax = Inf, ymin = -Inf, ymax = Inf),
    aes(
      x = NULL,
      xmin = xmin, 
      xmax = xmax, 
      ymin = ymin, 
      ymax = ymax), 
    fill = "darkred", 
    alpha = 0.3) +
  stat_function(
    fun = dnorm, 
    n = nrow(j1_ref), 
    args = list(mean = mean_temp, 
                sd = temp_sd), 
    linewidth = 1) +
  geom_vline(xintercept = mean_temp, linetype = 2) +
  geom_vline(xintercept = thresh[[1]], linetype = 3) +
  geom_vline(xintercept = thresh[[2]], linetype = 3) +
  geom_dotplot(fill = "lightblue", binwidth = 0.15, ) + 
  scale_y_continuous(limits = c(0, 0.5), expand = expansion(add = c(0,0))) +
  scale_x_continuous(labels = number_format(suffix = "\u00b0C"),
                     limits = c(6.5,13),
                     expand = expansion(add = c(.5,.5))) +
  theme(axis.text.y = element_blank(),
        axis.ticks.y = element_blank()) +
  annotate(x = 7, y = 0.4, label = '"Cold Spell"', geom = "text", size = 6) +
  annotate(x = 12.4, y = 0.4, label = '"Heatwave"', geom = "text", size = 6) +
  labs(x = "Sea Surface Temperature", 
       y = "Count", 
       title = "June 1st Heatwave/Coldspell Thresholds",
       color = "",
       subtitle = "Gulf of Maine, 1982-2011 Reference Period") 
```

## Tracking "Events" in Time

Thresholds are smoothed with a moving average to get a seasonally varying heatwave/coldspell thresholds.

```{r}
#| label: heatwaves-standard



# Run heatwaves
# Uses area weighted sst by default
gom_hw <- pull_heatwave_events(
  temperature_timeseries = gom_sst,
  threshold = 90, 
  clim_ref_period = c("1982-01-01", "2011-12-31")) %>% 
  supplement_hw_data() %>% 
  filter(doy != 366)


# Plot How Heatwaves Move above and below threshold criteria in practice
gom_hw %>% 
  mutate(time = as.Date(time)) %>% 
  filter(year(time) == 2019,
         month(time) %in% c(7:9))  %>% 
year_hw_temps_two(year_hw_dat = ., temp_units = "C")  +
  labs(title = "Established Heatwave Event Record")
  
```

## Shifting the Baseline

The major criticism of this approach is that the reference period is **static,** and thresholds do not track long-term trends.

```{r}
#| label: shifting-dist

# Pull reference period
new_j1_ref <- j1 %>% filter(between(year(time), 1991, 2020))

# Get mean/sd
new_mean_temp <- mean(new_j1_ref$area_wtd_sst)
new_temp_sd <- sd(new_j1_ref$area_wtd_sst)

# Plot
ggplot(j1_ref, aes(x = area_wtd_sst)) + 
  stat_function(
    aes(color = "1982-2011 Reference Period"),
    fun = dnorm, 
    n = nrow(j1_ref), 
    args = list(mean = mean_temp, 
                sd = temp_sd), 
    linewidth = 1) +
  stat_function(
    aes(color = "1991-2020 Reference Period"),
    fun = dnorm, 
    n = nrow(new_j1_ref), 
    args = list(mean = new_mean_temp, 
                sd = new_temp_sd), 
    linewidth = 1) +
  geom_vline(xintercept = mean_temp, linetype = 2,
             color = gmri_cols("gmri blue")) +
  geom_vline(xintercept = new_mean_temp, linetype = 2,
             color = gmri_cols("orange")) +
  scale_y_continuous(limits = c(0, 0.5), expand = expansion(add = c(0,0))) +
  scale_x_continuous(labels = number_format(suffix = "\u00b0C"),
                     limits = c(6.5,13),
                     expand = expansion(add = c(.5,.5))) +
  scale_color_gmri() +
  theme(axis.text.y = element_blank(),
        axis.ticks.y = element_blank(),
        legend.position = c(0.2,0.85)) +
  labs(x = "Sea Surface Temperature", 
       y = "Frequency", 
       title = "Reference Periods Set the Mean+Variance of 'Norm'",
       color = "",
       subtitle = "June 1st norm is both warmer and more variable") 
```

## Impacts from Changing the Baseline

If we merely change the baseline, our point of reference for anomalies and heatwaves changes:

```{r}
#| label: new-hw-timeline 

# Run heatwaves
# Uses area weighted sst by default
gom_hw_new <- pull_heatwave_events(
  temperature_timeseries = gom_sst,
  threshold = 90, 
  clim_ref_period = c("1991-01-01", "2020-12-31")) %>% 
  supplement_hw_data() %>% 
  filter(doy != 366)


gom_hw_new %>% 
  filter(year(time) == 2019,
         month(time) %in% c(7:9))  %>% 
year_hw_temps_two(year_hw_dat = ., temp_units = "C") +
  labs(title = "Heatwave/Coldspell Events Less Frequent with New Norms")


```

## Jacox Approach: De-trending Anomalies

> For the detrended analysis, we removed linear trends over the 1991--2020 period from the observed SST anomalies and the lead-time-dependent forecast SST anomalies at each grid cell.

## De-Trending Approach Process:

1.  Calculate recent climatology (e.g., last 30 years or all available years)

2.  Calculate anomalies

3.  De-trend anomalies by removing long-term trends for each day of year

4.  Calculate thresholds using 10th and 90th percentile of climatological period

5.  Identify MHWs using the Hobday definition of 5 days above threshold etc.

## Comparison of Four Outcomes:

Changing the baseline & removing long-term trends over different periods

```{r}
#| label: better-comparison-code


# Fixed Baselines
fixed_82 <- pull_heatwave_events(gom_sst) %>% 
  supplement_hw_data() %>% 
  filter(doy != 366)  %>% 
  mutate(year = year(time),
         yday = yday(time),
         yr_rev = factor(year),
         yr_rev = fct_rev(yr_rev),
         flat_date = as.Date("2000-01-01") + yday - 1)

# 91-2020
fixed_91 <- pull_heatwave_events(gom_sst, clim_ref_period = c("1991-01-01", "2020-12-31")) %>% 
  supplement_hw_data() %>% 
  filter(doy != 366)  %>% 
  mutate(year = year(time),
         yday = yday(time),
         yr_rev = factor(year),
         yr_rev = fct_rev(yr_rev),
         flat_date = as.Date("2000-01-01") + yday - 1)



# De-trended Anomalies
detrended_82 <- pull_heatwave_events(gom_sst, 
                                     clim_ref_period = c("1982-01-01", "2011-12-31"), 
                                     detrend = TRUE) %>% 
  supplement_hw_data() %>% 
  filter(doy != 366)  %>% 
  mutate(year = year(time),
         yday = yday(time),
         yr_rev = factor(year),
         yr_rev = fct_rev(yr_rev),
         flat_date = as.Date("2000-01-01") + yday - 1)


#  Detrended 92-2020
detrended_91 <- pull_heatwave_events(gom_sst, 
                                     clim_ref_period = c("1991-01-01", "2020-12-31"), 
                                     detrend = TRUE) %>% 
  supplement_hw_data() %>% 
  filter(doy != 366)  %>% 
  mutate(year = year(time),
         yday = yday(time),
         yr_rev = factor(year),
         yr_rev = fct_rev(yr_rev),
         flat_date = as.Date("2000-01-01") + yday - 1)



# put methods in a list
method_list <- list(
  "static82" = fixed_82,
  "static91" = fixed_91,
  "moving82" = detrended_82,
  "moving91" = detrended_91
)


# Put them together for comparison
flag_test <- bind_rows(method_list, .id = "hw_method") %>% 
  mutate(
    hw_type = ifelse(str_detect(hw_method, "moving"), "Jacox Detrended HW", "Hobday Static Baseline"),
    baseline = ifelse(str_detect(hw_method, "82"), "Ref: 1982-2011", "Ref: 1991-2020")
  )

```

## Four Methods: Temperature

```{r}
#| label: four-methods-temp


# Plot how all 4 options work
flag_test  %>% 
ggplot(aes(time,  sst, group = hw_method)) +
  geom_line(aes(color = status, alpha = status), linewidth = 0.75) +
  scale_color_manual(values = c( gmri_cols("gmri blue")[[1]], gmri_cols("orange")[[1]],  "gray80")) +
  scale_alpha_manual(values = c(1, 1, 0.2)) +
  facet_grid(baseline~hw_type) +
  guides(alpha = "none") +
  labs(x = "Time", y = "Sea Surface Temperature", 
       color = "Above Heatwave Threshold:")
```

## Four Methods: Anomalies

```{r}
#| label: four-methods-anoms

flag_test  %>% 
  arrange(time) %>% 
  ggplot(aes(time, sst_anom)) +
  geom_path(aes(color = status, alpha = status), linewidth = 0.5, group = 1) +
  scale_color_manual(values = c( gmri_cols("gmri blue")[[1]], gmri_cols("orange")[[1]],  "gray80")) +
  scale_alpha_manual(values = c(1, 1, 0.2)) +
  facet_grid(baseline~hw_type) +
  guides(alpha = "none") +
  labs(x = "Time", y = "SST Anomaly", color = "Heatwave Event:")
```

# Full Workflow:

# 1. Calculate Climatology

```{r}
#| label: heatwaveR-seasonal-climatology
#| eval: true


# Calculate seasonally varying climatology with threshold w/ smoothing window
# This is currently done inside of pull_heatwave_events and is not run here
gom_clim  <- ts2clm(
  data = gom_sst,
  x = time, 
  y = sst,
  climatologyPeriod = c("1991-01-01", "2020-12-31"),
  pctile = 90, clmOnly = F) %>%
  mutate(anom = sst - seas,
         yr = lubridate::year(time))


gom_clim %>% 
  distinct(doy, .keep_all = T) %>% 
  ggplot(aes(doy, seas)) +
  geom_line(aes(color = "Daily Climatological Average\n1991-2020"), linewidth = 1) +
  scale_color_gmri() +
  labs(y = "Sea Surface Temperature", x = "Day of Year", color = "") +
  theme(legend.position = c(0.225, 0.85))

```

## 2. Calculate Anomalies

```{r}

gom_clim %>% 
  filter(yr == 2021) %>% 
  mutate(seas = seas- seas) %>% 
  ggplot(aes(time, seas)) +
  geom_line(aes(color = "Daily Climatological Average"), linewidth = 1) +
  geom_line(aes(y = anom, color = "Temperature Anomaly"), linewidth = 1) +
  scale_color_gmri() +
  labs(y = "Sea Surface Temperature", x = "Day of Year", color = "") +
  theme(legend.position = c(0.225, 0.85))

```

## 3. De-trend Anomalies

```{r}
# Remove linear trend from anomalies or some other value
# needs to be done based on day of year

# See: detrend_sst


# Plot the original anomalies, for one day of the year
gom_j1 <- filter(gom_clim, 
                 month(time) == 6, 
                 day(time) == 1)

# de-trend and reshape
j1_detrend <- detrend_sst(gom_j1, vals = "anom", yr_col = "yr") %>% 
  rename(`Fixed Baseline Anomalies` = anom,
         `De-Trended Anomalies` = detrend_vals) %>% 
  pivot_longer(names_to = "anom_type", values_to = "anom_vals", cols = c(
    `Fixed Baseline Anomalies`, `De-Trended Anomalies`))

# Plot them de-trended
j1_detrend %>% 
  mutate(anom_type = fct_rev(anom_type)) %>% 
  ggplot(aes(yr, anom_vals)) +
  geom_point() +
  geom_line() +
  geom_smooth(formula = y ~ x, method = "lm") +
  facet_wrap(~anom_type, ncol = 1) +
  labs(x = "Year", y = "SST Anomaly", title = "June 1st: Anomaly Choice Differences")
```

## 4. Calculate Thresholds

```{r}
# Thresholds are set with: heatwaveR::detect_event()
# Just need to feed it either the original SST or the de-trended anomalies:
# Need to preserve some indication that SST has been de-trended or not


# Currently what I'm doing:
# de-trended anomalies == Deviation from reference AND deviation from the trend
# climatology + de-trended anomalies == How hot they are without trend
# Checking the original thresholds against these values should reflect 
# when temps are "extreme" in both regards: raw temp and against trend




```

```{r}
#| eval: true

# Plot the detrended anomalies against originals:

detrended_91  %>% 
  filter(yr == 2022) %>% 
  ggplot(aes(time)) +
    geom_line(aes(y = sst_anom, color = "Before De-Trending"), linewidth = 0.75) +
    geom_line(aes(y = detrend_vals, color = "After De-Trending"), 
              linewidth = 0.75) +
  geom_line(aes(y = mhw_thresh-seas, color = "Original MHW Threshold"),
            linetype = 1, linewidth = 1) +
  scale_color_manual(values = c(gmri_cols("blue"), "gray80", gmri_cols("orange"))) +
  labs(y = "Temperature Anomalies", x = "Day of Year", color = "") +
  theme(legend.position = c(0.225, 0.85))


```

## 5. Identify MHW's

```{r}
detrended_91  %>% 
  filter(yr == 2022) %>% 
  mutate(status = ifelse(status == "Sea Surface Temperature", "De-Trended Anomalies", status)) %>% 
  ggplot(aes(time)) +
    geom_path(aes(y = detrend_vals, color = status), 
              linewidth = 0.75, group = 1) +
    geom_line(aes(y = mhw_thresh-seas, color = "Original MHW Threshold"),
            linetype = 1, linewidth = 1) +
  scale_color_manual(values = c(gmri_cols("blue"), gmri_cols("orange"), "black")) +
  labs(y = "Temperature Anomalies", x = "Day of Year", color = "") +
  theme(legend.position = c(0.225, 0.85))
```

## Full Workflow {.scrollable}

The `pull_heatwave_events` function used in the warming report:

```{r}
#| eval: false
#| echo: true
#| lavel: pull-events-rework


#' @title Pull Marine Heatwave and cold Spell Events from Timeseries
#' 
#' @description Pull both heatwave and cold spell events using same threshold and return
#' as single table. Wrapper function to do heatwaves and coldwaves simultaneously at 90% 
#' or custom threshold
#' 
#' Option to de-trend anomalies at annual scale in accordance with Jacox et al. methodology. Default
#' is not de-trended and uses a statid climate reference period following the methods of hobday et al.
#'
#' @param temperature_timeseries timeseries dataframe with date and sst values
#' @param clim_ref_period start and end dates to use when calculating the climate reference 
#' period c("yyyy-mm-dd", "yyyy-mm-dd")
#' @date_col String indicating the column to use for dates
#' @temp_col String indicating the column to de-trend
#' @param threshold percentile cutoff for indicating a heatwave/coldspell event
#' @param detrend TRUE/FALSE Whether to de-trend anomalies prior to event detection, default is FALSE.
#'
#' @return
#' @export
#'
#' @examples
pull_heatwave_events <- function(temperature_timeseries, 
                                 clim_ref_period = c("1982-01-01", "2011-12-31"),
                                 date_col = "time",
                                 temp_col = "sst",
                                 threshold = 90,
                                 detrend = FALSE) {
  
  # temperature_timeseries <- gom_sst
  
  
  # Pull the two column dataframe for mhw estimation
  test_ts <- data.frame(t = as.Date(temperature_timeseries[[date_col]]), 
                        temp = temperature_timeseries[[temp_col]])
  
  
  # Calculate seasonally varying climatology with threshold w/ smoothing window
  ts  <- heatwaveR::ts2clm(data = test_ts, 
                climatologyPeriod = clim_ref_period, 
                pctile = threshold) %>% 
    mutate(sst_anom = temp - seas,
           yr = lubridate::year(t))
  
  
  
  # Perform linear detrending on anomalies
  if(detrend){
    
    # Detrend day of year temperature trends:
    ts <- ts %>% 
      split(.$doy) %>% 
      map_dfr(detrend_sst, vals = "sst_anom", yr_col = "yr") %>% 
      mutate(detrend_temp = seas + detrend_vals) %>% 
      arrange(t)
    
  }
  
  
  # Perform Heatwave Detection
  mhw <- ifelse(detrend,
                heatwaveR::detect_event(ts, x = t, y = detrend_temp),
                heatwaveR::detect_event(ts, x = t, y = temp))
  
  
  
  # Select and rename critical heatwave data
  mhw_out <- mhw[[1]] %>% 
    #mutate(sst_anom = temp - seas) %>% 
    rename(time = t,
           sst = temp,
           mhw_thresh = thresh,
           mhw_threshCriterion = threshCriterion,
           mhw_durationCriterion = durationCriterion,
           mhw_event = event,
           mhw_event_no = event_no)
  
  
  # Repeat for cold spells
  # 2. Detect cold spells
  # coldSpells = TRUE flips boolean to < thresh
  ts <- ts2clm(data = test_ts, 
               climatologyPeriod = clim_ref_period, 
               pctile = (100 - threshold)) %>% 
    mutate(sst_anom = temp - seas,
           yr = lubridate::year(t))
  
  
  # Perform linear detrending on anomalies
  if(detrend){
    
    # Detrend day of year temperature trends:
    ts <- ts %>%
      split(.$doy) %>%
      map_dfr(detrend_sst, vals = "sst_anom", yr_col = "yr") %>%
      mutate(detrend_temp = seas + detrend_vals) %>% 
      arrange(t)
    
  }
  
  
  
  # Perform Cold Spell Detection
  mcs <- ifelse(detrend,
                heatwaveR::detect_event(ts, x = t, y = detrend_temp, coldSpells = T),
                heatwaveR::detect_event(ts, x = t, y = temp, coldSpells = T))
  
  
  
  # Prepare cold spell data to join
  # Remove columns that are shared with heatwaves
  mcs_out <- mcs[[1]] %>%
    dplyr::select(time = t,
           mcs_thresh = thresh,
           mcs_threshCriterion = threshCriterion,
           mcs_durationCriterion = durationCriterion,
           mcs_event = event,
           mcs_event_no = event_no)
  
  
  # join heatwave detection results to coldspell results
  hot_and_cold <- left_join(mhw_out, mcs_out, by = "time")
  
  
  # 3. Data formatting for plotting, 
  # adds columns to plot hw and cs seperately
  events_out <- hot_and_cold %>% 
    mutate(
      # Set up status to combine labelling for heatwaves and cold spells:
      status   = ifelse(mhw_event == TRUE, "Marine Heatwave Event", "Sea Surface Temperature"),
      status   = ifelse(mcs_event == TRUE, "Marine Cold Spell Event", status),
      event_type = ifelse(detrend, "Jacox Method", "Hobday Method"),
      # Corrective measures for where event flagging is off:
      # status   = ifelse(sst > mhw_thresh, "Marine Heatwave Event", status),
      # status   = ifelse(sst < mcs_thresh, "Marine Cold Spell Event", status),
      # Heatwave event temperature values:
      hwe      = ifelse(mhw_event == TRUE, sst, NA),
      cse      = ifelse(mcs_event == TRUE, sst, NA),
      nonevent = ifelse(mhw_event == FALSE & mcs_event == FALSE, sst, NA)) 
  
  # Close the gaps between a mhw event and sst (might not need if full line for temp exists)
  events_out <- events_out %>% 
    mutate(hwe = ifelse( (is.na(hwe) & is.na(lag(hwe, n = 1))) == FALSE, sst, hwe),
           cse = ifelse( (is.na(cse) & is.na(lag(cse, n = 1))) == FALSE, sst, cse)) %>% 
    distinct(time, .keep_all = T)
  
  
  return(events_out)
}
```

## Fixed Baseline Heatmaps

::: panel-tabset
### Baseline: 1982-2011

```{r}
fixed_82 %>% 
heatwave_heatmap_plot(., temp_units = "C", start_yr = 2000, end_yr = 2022) +
  labs(title = "Hobday Methodology")
```

### Baseline: 1991-2020

```{r}
fixed_91 %>% 
heatwave_heatmap_plot(., temp_units = "C", start_yr = 2000, end_yr = 2022)  +
  labs(title = "Hobday Methodology")
```
:::

:::

## Anomalies After De-Trending

::: panel-tabset
### Baseline: 1982-2011

```{r}
detrended_82 %>% 
  select(-sst_anom) %>% 
  rename(sst_anom = detrend_vals) %>% 
heatwave_heatmap_plot(., temp_units = "C", start_yr = 2000, end_yr = 2022)+
  labs(title = "Jacox Methodology", fill = "De-Trended SST Anomaly")
```

### Baseline: 1991-2020

```{r}
detrended_91 %>% 
  select(-sst_anom) %>% 
  rename(sst_anom = detrend_vals) %>% 
  heatwave_heatmap_plot(., temp_units = "C", start_yr = 2000, end_yr = 2022) +
  labs(title = "Jacox Methodology", fill = "De-Trended SST Anomaly")
```
:::

## How the NE Science Center Plans to Report:

-   Anomalies from 1991-2020 Climatology
-   MHW Events from De-trending 1982-2022 Data

## How Our Heatmap Would Change

```{r}
#  Detrended 82-2020
detrended_full <- pull_heatwave_events(gom_sst, 
                                     clim_ref_period = c("1982-01-01", "2022-12-31"), 
                                     detrend = TRUE) %>% 
  supplement_hw_data() %>% 
  filter(doy != 366)  %>% 
  mutate(year = year(time),
         yday = yday(time),
         yr_rev = factor(year),
         yr_rev = fct_rev(yr_rev),
         flat_date = as.Date("2000-01-01") + yday - 1)


```

::: panel-tabset
### Old: 1982-2011

```{r}
fixed_82 %>% 
heatwave_heatmap_plot(., temp_units = "C", start_yr = 1982, end_yr = 2022) +
  labs(title = "Current 1982-2011 Methodology")
```

### New: 1982-2022 De-Trended

```{r}
detrended_full %>% 
  select(-sst_anom) %>% 
  rename(sst_anom = detrend_vals) %>% 
  heatwave_heatmap_plot(., temp_units = "C", start_yr = 1982, end_yr = 2022) +
  labs(title = "Proposed De-Trending Methodology", fill = "De-Trended SST Anomaly")
```
:::

## Hybrid Visualization (idea)

-   Use color scheme from new 30-year baseline

-   use events from full period de-trending

-   flag "heat stress" or "scald stress"

-   Maybe add a vertical indication of GSI or ENSO index

## Hybrid Visualization (fig)

```{r}

# Color limit for palettes
temp_limits <- c(-4, 4)
temp_breaks <- c(temp_limits[1], temp_limits[1]/2,  0, temp_limits[2]/2, temp_limits[2])
temp_labels <- str_c(c(str_c("< ", temp_limits[1]), temp_limits[1]/2, 0, temp_limits[2]/2, str_c("> ", temp_limits[2])), deg_c)



fixed_91 %>% 
  ggplot(aes(x = flat_date, y = year)) +
    
    # tile for sst colors
    geom_tile(aes(fill = sst_anom)) +
    
    # points for heatwave events (de-trended)
    geom_point(data = filter(detrended_full, mhw_event == TRUE),
             aes(flat_date, year), color ="black", size = .25) +
    scale_x_date(date_labels = "%b", date_breaks = "1 month", 
                 expand = expansion(add = c(0,0))) +
    scale_y_continuous(limits = c(1982 + .5, 2022 + .5), 
                       expand = expansion(add = c(0,0))) +
    scale_fill_distiller(palette = "RdBu", 
                         na.value = "transparent", 
                         limit = temp_limits, 
                         oob = scales::squish,
                         breaks = temp_breaks, 
                         labels = temp_labels) +
    
    #5 inches is default rmarkdown height for barheight
    guides("fill" = guide_colorbar(
      title = "Sea Surface Temperature Anomaly", 
      title.position = "right", 
      title.hjust = 0.5,
      barheight = unit(3.5, "inches"), 
      frame.colour = "black", 
      ticks.colour = "black")) +  
    theme(legend.title = element_text(angle = 90)) +
  labs(title = "Heatwave & Anomaly Hybrid Figure",
       subtitle = "Anomalies Colored Based on Fixed 91-2020 Climatology\nExtreme Heat Events Flagged using 82-2022 De-Trending",
       x = "Month", 
       y = "Year",
       fill = "1991-2020 SST Anomaly")



```

## De-Trending Method Questions:

Is a linear de-trending causing new problems: Was 1982 an outlier year?

```{r}


detrended_full %>% 
  mutate(baseline = "1982-2022 De-Trended Heatwaves",
         hw_type = "De-Trended Heatwave") %>% 
  ggplot(aes(time, sst_anom)) +
  geom_path(aes(color = status, alpha = status), linewidth = 0.5, group = 1) +
  scale_color_manual(values = c( gmri_cols("gmri blue")[[1]], gmri_cols("orange")[[1]],  "gray80")) +
  scale_alpha_manual(values = c(1, 1, 0.2)) +
  facet_grid(~baseline) +
  theme(legend.position = "bottom") +
  guides(alpha = "none") +
  labs(x = "Time", y = "SST Anomaly", color = "Heatwave Event:")
```

## Choosing the Right Method

Part of the debate on which method is best hinges on what the application is. Different species/communities may have different sensitivities to the prolonged heat exposure that is more clear from a fixed baseline method. Whereas other species may be more sensitive to the acute stress of a rapid change in temperature that is better captured by a methodology that removes the long-term trend.

```{r}
# Prepare a MHW dataset that contains both:

# Fixed Baseline, new ref period
method_1 <- fixed_91 %>% select(time, sst, static_mhw_event = mhw_event, static_mcs_event = mcs_event)

# Linear de-trend, 1982-2011
method_2 <- detrended_full %>% select(time, sst, detrend_mhw_event = mhw_event, detrend_mcs_event = mcs_event) 

# can't remember if the seasonal climatology includes the trend, it doesn't
# we'd need to add the trend prediction to get it:
#ggplot(detrended_full, aes(time, mhw_thresh+trend_pred)) + geom_line()


both_methods <- left_join(method_1, method_2) 

both_methods %>% 
  pivot_longer(
    names_to = "extreme_event_flag",
    values_to = "status",
    cols = -c(time, sst)) %>% 
  mutate(
    method = ifelse(
      str_detect(extreme_event_flag, "static"), 
      "1991-2020 Static Baseline", 
      "1982-2022 De-Trended"),
    status_color = ifelse(status, "darkred", "transparent"),
    status_color = ifelse(
      str_detect(extreme_event_flag, "mcs") & status == T, 
      "skyblue3", 
      status_color)) %>% 
  ggplot(aes(time, y = extreme_event_flag)) +
    geom_point(aes(color = I(status_color), fill = I(status_color)), size = 0.75) +
    facet_wrap(~ method, nrow = 2, scales = "free") +
    labs(y = "Extreme Event Methodology", x = "Date")
  
  
# both_methods %>% 
#   write_csv(here::here("local_data/gom_mhw_outcome_comparison.csv"))
```
